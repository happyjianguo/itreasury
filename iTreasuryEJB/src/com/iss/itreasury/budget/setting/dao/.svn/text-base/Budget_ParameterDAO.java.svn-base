/* Generated by Together */

package com.iss.itreasury.budget.setting.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

import com.iss.itreasury.budget.exception.BudgetDAOException;
import com.iss.itreasury.budget.setting.dataentity.ParameterInfo;
import com.iss.itreasury.dao.SettlementDAO;
public class Budget_ParameterDAO extends SettlementDAO {
	public Budget_ParameterDAO(){
		super("Budget_Parameter");
		super.setUseMaxID(); 
	}
	
	
	/**
	 * 查询系统参数表中记录
	 * @param isDesc
	 * @param lOfficeID
	 * @return
	 * @throws Exception
	 */
	public  ParameterInfo findParameter() throws BudgetDAOException
	{
		ParameterInfo info = new ParameterInfo();
		Collection cln = null;
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		try
		{
			conn = this.getConnection();
			StringBuffer buffer = new StringBuffer("");
			//拼凑查询语句
			buffer.append(" select * from budget_parameter");
			String sql = buffer.toString();

			System.out.println(sql);

			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			cln = this.transferResultsetIntoCollection(rs);
			if(cln!=null && cln.size()!=0)
			{
				Iterator it = cln.iterator();
				if(it.hasNext())
				{
					info=(ParameterInfo)it.next();
				}
			}
		}
		catch(Exception e)
		{
			throw new BudgetDAOException(e.getMessage(),e);			
		}
		finally
		{
			try
			{
				this.cleanup(rs);
				this.cleanup(ps);
				this.cleanup(conn);
			}
			catch(SQLException se)
			{
				throw new BudgetDAOException(se.getMessage(),se);			
			}
		}

		return info;
	}
	
	/**
	 * 查询系统参数表中所有记录
	 * @param isDesc
	 * @param lOfficeID
	 * @return
	 * @throws Exception
	 */
	public Collection findAllParameter() throws Exception
	{
		Collection cln = null;
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		try
		{
			conn = this.getConnection();
			StringBuffer buffer = new StringBuffer("");
			//拼凑查询语句
			buffer.append(" select * from budget_parameter");
			String sql = buffer.toString();

			System.out.println(sql);

			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			cln = this.transferResultsetIntoCollection(rs);
		}
		finally
		{
			this.cleanup(rs);
			this.cleanup(ps);
			this.cleanup(conn);
		}

		return cln;
	}
	private Collection transferResultsetIntoCollection(ResultSet rs)
	throws Exception
	{
	ArrayList list = new ArrayList();
	ParameterInfo qInfo = null;
	while (rs.next())
	{
		qInfo = new ParameterInfo();
		qInfo.setId(rs.getLong("ID"));
		qInfo.setEbankLink(rs.getLong("EbankLink"));
		qInfo.setSettmentLink(rs.getLong("settmentLink"));
		qInfo.setBudgetUnit(rs.getLong("budgetUnit"));
		qInfo.setBudgetType(rs.getLong("budgetType"));
		qInfo.setControlType(rs.getLong("controlType"));
		qInfo.setCaculateType(rs.getLong("caculateType"));
		qInfo.setNestingMaxLevel(rs.getLong("nestingMaxLevel"));
		qInfo.setChangeMaxNum(rs.getLong("changeMaxNum"));
		list.add(qInfo);		
	}

	return list;
}

}                      