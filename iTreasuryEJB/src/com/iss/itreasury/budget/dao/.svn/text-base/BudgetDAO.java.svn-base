/* Generated by Together */

package com.iss.itreasury.budget.dao;

import java.sql.Connection;
import java.sql.Timestamp;

import com.iss.itreasury.budget.dataentity.BudgetBaseDataEntity;
import com.iss.itreasury.dao.ITreasuryDAO;
import com.iss.itreasury.dao.ITreasuryDAOException;
import com.iss.itreasury.settlement.setting.dataentity.StockProjectNameSettingInfo;
import com.iss.itreasury.util.Constant;
import com.iss.itreasury.util.Log4j;

/**
 * Title:        		iTreasury
 * Description:         
 * Copyright:           Copyright (c) 2003
 * Company:             iSoftStone
 * @author             xrli
 * @version
 *  Date of Creation    2005-5-19
 */
public abstract class BudgetDAO extends ITreasuryDAO{
	
    protected Log4j log = new Log4j(Constant.ModuleType.BUDGET, this);
    
    public BudgetDAO(){
		super();
	}
    
	public BudgetDAO(String tableName){
		super(tableName);
	}
	
	public BudgetDAO(Connection conn){
		super(conn);
	}
	
	public BudgetDAO(String tableName,Connection conn){
		super(tableName,conn);
	}	
	/**
	 * 数据库逻辑删除操作
	 * @param id　　　
	 * @param 
	 * @return
	 * @throws ITreasuryDAOException
	 */	
	public void delete(long id)  throws ITreasuryDAOException{
		//To be modify the delete status defined in Constant
		updateStatus(id, 0);
		
	}

	/**
	 * 数据库更新操作操作
	 * @param id　　　
	 * @param statusID 需要更新到的状态
	 * @return
	 * @throws ITreasuryDAOException
	 */		
	public void updateStatus(long id, long statusID) throws ITreasuryDAOException{
		try {
			initDAO();
			StringBuffer buffer = new StringBuffer();
			buffer.append("UPDATE \n");
			buffer.append(strTableName);
			buffer.append(" SET STATUSID = " + statusID);
			//TBD: maybe need add update execute date
			buffer.append("\n  WHERE ID = " + id);
			String strSQL = buffer.toString();
			log.debug(strSQL);
			prepareStatement(strSQL);
			executeQuery();
			
		} catch (ITreasuryDAOException e) {
			throw new ITreasuryDAOException("状态更新异常",e);
		}
		finally
		{
		    finalizeDAO();
		}
		
	}	
	
	/**
	 * 判断是否被修改过
	 * @param info 
	 * @return 已经修改过 true；未被修改过 false
	 * @exception
	 */
	public boolean isTouch(BudgetBaseDataEntity info) throws Exception
    {
        boolean bReturn = false;
        try
        {
            BudgetBaseDataEntity tmpInfo = (BudgetBaseDataEntity)findByID(info.getId(),BudgetBaseDataEntity.class);
            if (tmpInfo == null || tmpInfo.getModifyTime().compareTo(info.getModifyTime())!=0)
            {
            	if (tmpInfo != null && info != null){
            		log.print("数据库修改时间:"+tmpInfo.getModifyTime().toString());
            		log.print("页面传入时间"+info.getModifyTime().toString());
            	}else{
            		log.print("null");
            	}
            	bReturn = true;
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
            throw e;
        }
        return bReturn;
    }
}
