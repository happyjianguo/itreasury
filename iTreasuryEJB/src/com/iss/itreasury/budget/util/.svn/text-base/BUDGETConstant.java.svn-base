/* Generated by Together */
package com.iss.itreasury.budget.util;

import javax.servlet.jsp.JspWriter;

import com.iss.itreasury.util.Constant;
import com.iss.itreasury.util.Log;

/**
 * @author weilu
 *
 * TODO To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
public class BUDGETConstant extends com.iss.itreasury.util.Constant
{
    /**
     * 审批流业务类型
     * @author weilu
     */
	public static class ApprovalType
	{
	    public static final long CURRENT = 1;		//本级单位审批
	    public static final long TOTAL = 2;			//下级单位审批
	}
	
	//交易状态
	public static class TransactionStatus
    {
        public static final long DELETED = 0; //已删除

        public static final long TEMPSAVE = 1; //暂存

        public static final long SAVE = 2; //保存（未复核）

        public static final long CHECK = 3; //已复核

        public static final long NOTSIGN = 4; //未签认

        public static final long SIGN = 5; //已签认

        public static final long CONFIRM = 6; //已确定

        public static final long CIRCLE = 7; //已勾账
    }
	
	
	//是否有效
	public static class BooleanValue
	{
	     public static final long ISFALSE = 0; //false or no

	     public static final long ISTRUE = 1; //true or yes
	}
	
	/**
	 * 预算校验返回值
	 * @author xrli
	 *
	 * To change the template for this generated type comment go to
	 * Window - Preferences - Java - Code Generation - Code and Comments
	 */
	public static class BudgetCheckCode
	{
	     public static final long PASS = 100; //没超预算

	     public static final long OVERSUPPLENESS = 200; //超柔性预算
	     
	     public static final long OVERRIGIDITY = 300; //超刚性预算	
	     
	     public static final long UNBUDGET = 400; //账户不控制预算
	     
	}
	
	/**
	 * 预算
	 * @author xrli
	 *
	 * To change the template for this generated type comment go to
	 * Window - Preferences - Java - Code Generation - Code and Comments
	 */
	public static class BudgetFlag
	{
	    public static final long CONSTITUTE = 1;	//预算编制
	    public static final long ADJUST = 2;		//预算调整
	    public static final long TOTAL = 3;			//预算汇总
	    
	    public static String getCode(long lCode)
	    {
	        String strReturn = "";
	        switch ((int) lCode)
            {
                case (int) CONSTITUTE:
                    strReturn = "YS";
                    break;
                case (int) ADJUST:
                    strReturn = "TZ";
                    break;
                case (int) TOTAL:
                    strReturn = "HZ";
                    break;
            }
	        return strReturn;
	    }
	    
	}
	
	public static class BudgetType
	{
	    public static final long RIGIDITY= 1;	//刚性预算
	    public static final long SUPPLENESS = 2;//柔性预算
	    
	}
	
	public static class BudgetPeriod
	{
	    public static final long Y = 1;			//年度预算
	    public static final long H = 2;			//半年预算
	    public static final long Q = 3;			//季度预算
	    public static final long M = 4;			//月预算
	    public static final long T = 5;			//旬预算
	    public static final long W = 6;			//周预算
	    public static final long D = 7;			//日预算
	    public static final long X1 = 8;		//双周预算
	    public static final long X2 = 9;		//内部特定预算
	    
	    public static final String getName(long lCode)
        {
            String strReturn = "";
            switch ((int) lCode)
            {
                case (int) Y:
                    strReturn = "年";
                    break;
                case (int) H:
                    strReturn = "半年";
                    break;
                case (int) Q:
                    strReturn = "季度";
                    break;
                case (int) M:
                    strReturn = "月";
                    break;
                case (int) T:
                    strReturn = "旬";
                    break;
                case (int) W:
                    strReturn = "周";
                    break;
                case (int) D:
                    strReturn = "日";
                    break;
                case (int) X1:
                    strReturn = "双周";
                    break;
                case (int) X2:
                    strReturn = "自设";
                    break;
            }
            return strReturn;
        }
	    public static final String getCode(long lCode)
        {
            String strReturn = "";
            switch ((int) lCode)
            {
                case (int) Y:
                    strReturn = "Y";
                    break;
                case (int) H:
                    strReturn = "H";
                    break;
                case (int) Q:
                    strReturn = "Q";
                    break;
                case (int) M:
                    strReturn = "M";
                    break;
                case (int) T:
                    strReturn = "T";
                    break;
                case (int) W:
                    strReturn = "W";
                    break;
                case (int) D:
                    strReturn = "D";
                    break;
                case (int) X1:
                    strReturn = "X1";
                    break;
                case (int) X2:
                    strReturn = "X2";
                    break;
            }
            return strReturn;
        }

        public static final long[] getAllCode()
        {
            long[] lReturn;
                long[] lTemp =
                { Y,H,Q,M,T,W,D,X1,X2 };
                lReturn = lTemp;

            return lReturn;
        }
        public static final long[] getAllCode(long officeID, long currencyID) {
			return Constant.getAllCode(
					"com.iss.itreasury.budget.util.BUDGETConstant$BudgetPeriod", officeID,
					currencyID);
		}

        /**
         * 显示下拉列表
         * 
         * @param out
         * @param strControlName,
         *            控件名称
         * @param nType，控件类型（0，显示全部）
         * @param lSelectValue
         * @param isNeedAll，是否需要”全部项“
         * @param isNeedBlank
         *            是否需要空白行
         * @param strProperty
         */
        public static final void showList(JspWriter out, String strControlName, int nType, long lSelectValue, boolean isNeedAll, boolean isNeedBlank, String strProperty,long lOfficeID,long lCurrencyID)
        {
            long[] lArrayID = null;
            String[] strArrayName = null;
            try
            {
                switch (nType)
                {
                    case 0:
                        lArrayID = getAllCode(lOfficeID,lCurrencyID);
                        break;
                }
                strArrayName = new String[lArrayID.length];
                for (int i = 0; i < lArrayID.length; i++)
                {
                    strArrayName[i] = getName(lArrayID[i]);
                }
                showCommonList(out, strControlName, lArrayID, strArrayName, lSelectValue, isNeedAll, strProperty, isNeedBlank);
            }
            catch (Exception ex)
            {
                Log.print(ex.toString());
            }
        }
	}
	/**
	 * 预算计量单位
	 * @author weilu
	 *
	 * TODO To change the template for this generated type comment go to
	 * Window - Preferences - Java - Code Style - Code Templates
	 */
	public static class BudgetUnit
	{
	    public static final long YUAN = 1;			//元
	    public static final long QIANYUAN = 2;			//千元
	    public static final long WANYUAN = 3;			//万元
	    
	    public static String getName(long lCode)
	    {
	        String strReturn = "";
            switch ((int) lCode)
            {
                case (int) YUAN:
                    strReturn = "元";
                    break;
                case (int) QIANYUAN:
                    strReturn = "千元";
                    break;
                case (int) WANYUAN:
                    strReturn = "万元";
                    break;
            }
            return strReturn;
	    }
	    public static final long[] getAllCode()
        {
            long[] lReturn;
                long[] lTemp =
                { YUAN,QIANYUAN,WANYUAN };
                lReturn = lTemp;

            return lReturn;
        }
        public static final long[] getAllCode(long officeID, long currencyID) {
			return Constant.getAllCode(
					"com.iss.itreasury.budget.util.BUDGETConstant$BudgetUnit", officeID,
					currencyID);
		}

        /**
         * 显示下拉列表
         * 
         * @param out
         * @param strControlName,
         *            控件名称
         * @param nType，控件类型（0，显示全部）
         * @param lSelectValue
         * @param isNeedAll，是否需要”全部项“
         * @param isNeedBlank
         *            是否需要空白行
         * @param strProperty
         */
        public static final void showList(JspWriter out, String strControlName, int nType, long lSelectValue, boolean isNeedAll, boolean isNeedBlank, String strProperty,long lOfficeID,long lCurrencyID)
        {
            long[] lArrayID = null;
            String[] strArrayName = null;
            try
            {
                switch (nType)
                {
                    case 0:
                        lArrayID = getAllCode(lOfficeID,lCurrencyID);
                        break;
                }
                strArrayName = new String[lArrayID.length];
                for (int i = 0; i < lArrayID.length; i++)
                {
                    strArrayName[i] = getName(lArrayID[i]);
                }
                showCommonList(out, strControlName, lArrayID, strArrayName, lSelectValue, isNeedAll, strProperty, isNeedBlank);
            }
            catch (Exception ex)
            {
                Log.print(ex.toString());
            }
        }
	}
	
	/**
	 * 预算控制类型
	 * @author weilu
	 *
	 * TODO To change the template for this generated type comment go to
	 * Window - Preferences - Java - Code Style - Code Templates
	 */
	public static class BudgetControlType
	{
	    public static final long RIGID = 1;				//刚性预算
	    public static final long FLEXIBLE = 2;			//柔性预算
	    
	    public static String getName(long lCode)
	    {
	        String strReturn = "";
            switch ((int) lCode)
            {
                case (int) RIGID:
                    strReturn = "刚性预算";
                    break;
                case (int) FLEXIBLE:
                    strReturn = "柔性预算";
                    break;
            }
            return strReturn;
	    }
	    public static final long[] getAllCode()
        {
            long[] lReturn;
                long[] lTemp =
                { RIGID, FLEXIBLE};
                lReturn = lTemp;

            return lReturn;
        }
        public static final long[] getAllCode(long officeID, long currencyID) {
			return Constant.getAllCode(
					"com.iss.itreasury.budget.util.BUDGETConstant$BudgetControlType", officeID,
					currencyID);
		}

        /**
         * 显示下拉列表
         * 
         * @param out
         * @param strControlName,
         *            控件名称
         * @param nType，控件类型（0，显示全部）
         * @param lSelectValue
         * @param isNeedAll，是否需要”全部项“
         * @param isNeedBlank
         *            是否需要空白行
         * @param strProperty
         */
        public static final void showList(JspWriter out, String strControlName, int nType, long lSelectValue, boolean isNeedAll, boolean isNeedBlank, String strProperty,long lOfficeID,long lCurrencyID)
        {
            long[] lArrayID = null;
            String[] strArrayName = null;
            try
            {
                switch (nType)
                {
                    case 0:
                        lArrayID = getAllCode(lOfficeID,lCurrencyID);
                        break;
                }
                strArrayName = new String[lArrayID.length];
                for (int i = 0; i < lArrayID.length; i++)
                {
                    strArrayName[i] = getName(lArrayID[i]);
                }
                showCommonList(out, strControlName, lArrayID, strArrayName, lSelectValue, isNeedAll, strProperty, isNeedBlank);
            }
            catch (Exception ex)
            {
                Log.print(ex.toString());
            }
        }
	}
	
	/**
	 * 预算控制方式
	 * @author weilu
	 *
	 * TODO To change the template for this generated type comment go to
	 * Window - Preferences - Java - Code Style - Code Templates
	 */
	public static class BudgetControlMode
	{
	    public static final long TOTAL = 1;				//总额控制
	    public static final long DETAIL = 2;			//明细控制
	    
	    public static String getName(long lCode)
	    {
	        String strReturn = "";
            switch ((int) lCode)
            {
                case (int) TOTAL:
                    strReturn = "总额控制";
                    break;
                case (int) DETAIL:
                    strReturn = "明细控制";
                    break;
            }
            return strReturn;
	    }
	    public static final long[] getAllCode()
        {
            long[] lReturn;
                long[] lTemp =
                { TOTAL, DETAIL};
                lReturn = lTemp;

            return lReturn;
        }
        public static final long[] getAllCode(long officeID, long currencyID) {
			return Constant.getAllCode(
					"com.iss.itreasury.budget.util.BUDGETConstant$BudgetControlMode", officeID,
					currencyID);
		}

        /**
         * 显示下拉列表
         * 
         * @param out
         * @param strControlName,
         *            控件名称
         * @param nType，控件类型（0，显示全部）
         * @param lSelectValue
         * @param isNeedAll，是否需要”全部项“
         * @param isNeedBlank
         *            是否需要空白行
         * @param strProperty
         */
        public static final void showList(JspWriter out, String strControlName, int nType, long lSelectValue, boolean isNeedAll, boolean isNeedBlank, String strProperty,long lOfficeID,long lCurrencyID)
        {
            long[] lArrayID = null;
            String[] strArrayName = null;
            try
            {
                switch (nType)
                {
                    case 0:
                        lArrayID = getAllCode(lOfficeID,lCurrencyID);
                        break;
                }
                strArrayName = new String[lArrayID.length];
                for (int i = 0; i < lArrayID.length; i++)
                {
                    strArrayName[i] = getName(lArrayID[i]);
                }
                showCommonList(out, strControlName, lArrayID, strArrayName, lSelectValue, isNeedAll, strProperty, isNeedBlank);
            }
            catch (Exception ex)
            {
                Log.print(ex.toString());
            }
        }
	}
	
	/**
	 * 预算项目公式的计算方式
	 * @author weilu
	 *
	 * TODO To change the template for this generated type comment go to
	 * Window - Preferences - Java - Code Style - Code Templates
	 */
	public static class BudgetCaculateType
	{
	    public static final long AUTO = 1;				//自动计算
	    public static final long MANUAL = 2;			//手工计算
	    
	    public static String getName(long lCode)
	    {
	        String strReturn = "";
            switch ((int) lCode)
            {
                case (int) AUTO:
                    strReturn = "自动计算";
                    break;
                case (int) MANUAL:
                    strReturn = "手工计算";
                    break;
            }
            return strReturn;
	    }
	    public static final long[] getAllCode()
        {
            long[] lReturn;
                long[] lTemp =
                { AUTO, MANUAL};
                lReturn = lTemp;

            return lReturn;
        }
        public static final long[] getAllCode(long officeID, long currencyID) {
			return Constant.getAllCode(
					"com.iss.itreasury.budget.util.BUDGETConstant$BudgetCaculateType", officeID,
					currencyID);
		}

        /**
         * 显示下拉列表
         * 
         * @param out
         * @param strControlName,
         *            控件名称
         * @param nType，控件类型（0，显示全部）
         * @param lSelectValue
         * @param isNeedAll，是否需要”全部项“
         * @param isNeedBlank
         *            是否需要空白行
         * @param strProperty
         */
        public static final void showList(JspWriter out, String strControlName, int nType, long lSelectValue, boolean isNeedAll, boolean isNeedBlank, String strProperty,long lOfficeID,long lCurrencyID)
        {
            long[] lArrayID = null;
            String[] strArrayName = null;
            try
            {
                switch (nType)
                {
                    case 0:
                        lArrayID = getAllCode(lOfficeID,lCurrencyID);
                        break;
                }
                strArrayName = new String[lArrayID.length];
                for (int i = 0; i < lArrayID.length; i++)
                {
                    strArrayName[i] = getName(lArrayID[i]);
                }
                showCommonList(out, strControlName, lArrayID, strArrayName, lSelectValue, isNeedAll, strProperty, isNeedBlank);
            }
            catch (Exception ex)
            {
                Log.print(ex.toString());
            }
        }
	}
	
	/**
	 * 执行情况数据来源
	 * @author weilu
	 *
	 * TODO To change the template for this generated type comment go to
	 * Window - Preferences - Java - Code Style - Code Templates
	 */
	public static class DataSource
	{
	    public static final long BUDGETINPUT = 1;		//预算录入
	    public static final long BUDGETIMPORT = 2;		//预算导入
	    public static final long EBANK = 3;				//网银
	    public static final long SETTLEMENT = 4;		//结算
	    
	    public static String getName(long lCode)
	    {
	        String strReturn = "";
            switch ((int) lCode)
            {
                case (int) BUDGETINPUT:
                    strReturn = "预算录入";
                    break;
                case (int) BUDGETIMPORT:
                    strReturn = "预算导入";
                    break;
                case (int) EBANK:
                    strReturn = "网银";
                    break;
                case (int) SETTLEMENT:
                    strReturn = "结算";
                    break;
            }
            return strReturn;
	    }
	}
	
	/**
	 * 项目模板计算符号
	 * @author liuyang
	 *
	 */
	public static class BudgetFormula
    {

        public static final String  ADD = "+"; //加
        public static final String  SUBTRACT = "-"; //减
        public static final String  MULTIPLY = "*"; //乘
        public static final String  DIVIDE = "/"; //除    
        public static final String[] getAllCode()
        {
            String[] lTemp =
            { ADD, SUBTRACT, MULTIPLY, DIVIDE};
            return lTemp;
        }
        /**
         * 显示下拉列表
         * 
         * @param out
         * @param strControlName, *
         *            控件名称
         * @param nType，控件类型（0，显示全部；）
         * @param lSelectValue
         * @param isNeedAll，是否需要”全部项“
         * @param isNeedBlank
         *            是否需要空白行
         * @param strProperty
         */
        public static final void showList(JspWriter out, String strControlName, int nType, String lSelectValue, boolean isNeedAll, boolean isNeedBlank,
                String strProperty)
        {
            String[] lArrayID = null;
            String[] strArrayName = null;
            try
            {
                switch (nType)
                {
                    case 0:
                        lArrayID = getAllCode();
                        break;
                }
                strArrayName = new String[lArrayID.length];  
                for (int i = 0; i < lArrayID.length; i++)
                {
                    strArrayName[i] = lArrayID[i];
                }
                showCommonList(out, strControlName, lArrayID, strArrayName, lSelectValue, isNeedAll, strProperty, isNeedBlank);
            }
            catch (Exception ex)
            {
                Log.print(ex.toString());
            }
        }
    }
	
	/**
	 * 项目模板的收支类型
	 * @author liuyang
	 *
	 */
	public static class BudgetInComeType
	{
	    public static final long income = 1;	//收入
	    public static final long payout = 2;	//支出
	    public static final long sub = 3;       //表外
	    public static final long other = 4;     //其他
	    
	    public static String getName(long lCode)
	    {
	        String strReturn = "";
            switch ((int) lCode)
            {
                case (int) income:
                    strReturn = "收入";
                    break;
                case (int) payout:
                    strReturn = "支出";
                    break;
                case (int) sub:
                    strReturn = "表外";
                    break;
                case (int) other:
                    strReturn = "其他";
                    break;
            }
            return strReturn;
	    }
	    public static final long[] getAllCode()
        {
            long[] lReturn;
                long[] lTemp =
                { income, payout,sub,other};
                lReturn = lTemp;

            return lReturn;
        }
        public static final long[] getAllCode(long officeID, long currencyID) {
			return Constant.getAllCode(
					"com.iss.itreasury.budget.util.BUDGETConstant$BudgetInComeType", officeID,
					currencyID);
		}

        /**
         * 显示下拉列表
         * 
         * @param out
         * @param strControlName,
         *            控件名称
         * @param nType，控件类型（0，显示全部）
         * @param lSelectValue
         * @param isNeedAll，是否需要”全部项“
         * @param isNeedBlank
         *            是否需要空白行
         * @param strProperty
         */
        public static final void showList(JspWriter out, String strControlName, int nType, long lSelectValue, boolean isNeedAll, boolean isNeedBlank, String strProperty,long lOfficeID,long lCurrencyID)
        {
            long[] lArrayID = null;
            String[] strArrayName = null;
            try
            {
                switch (nType)
                {
                    case 0:
                        lArrayID = getAllCode(lOfficeID,lCurrencyID);
                        break;
                }
                strArrayName = new String[lArrayID.length];
                for (int i = 0; i < lArrayID.length; i++)
                {
                    strArrayName[i] = getName(lArrayID[i]);
                }
                showCommonList(out, strControlName, lArrayID, strArrayName, lSelectValue, isNeedAll, strProperty, isNeedBlank);
            }
            catch (Exception ex)
            {
                Log.print(ex.toString());
            }
        }
	}
	
	/**
	 * 列示
	 * @author weilu
	 *
	 * TODO To change the template for this generated type comment go to
	 * Window - Preferences - Java - Code Style - Code Templates
	 */
	public static class BudgetColumnList
	{
	    public static final long LASTBUDGET = 1;		//上期预算数
	    public static final long LASTEXECUTE = 2;		//上期实际数
	    public static final long LASTYEARBUDGET = 3;	//上年同期的预算数
	    public static final long LASTYEAREXECUTE = 4;	//上年同期的实际数
	    public static final long CURRENTBUDGET = 5;		//当前预算数
	    public static final long CURRENTEXECUTE = 6;	//当前执行数
	    public static final long ORIGINALAMOUNT = 7;	//原始预算数
	    public static final long EXCUTESCALE = 8;		//执行比例
	    public static final long ADJUSTSCALE = 9;		//调整比例
	    public static final long CURRENTAMOUNT = 10;	//本次金额
	    public static final long UNCHECKBUDGET = 11;	//未审核的预算数
	    
	    //预算历史对比分析
	    public static final long ABUDGETAMOUNT=12;//A 预算金额
	    public static final long AEXCUTEAMOUNT=13;//A 执行金额
	    public static final long BBUDGETAMOUNT=14;//B 预算金额
	    public static final long BEXCUTEAMOUNT=15;//B 执行金额	    
	    public static final long BUDGETSUB = 16;	//预算差额
	    public static final long BUDGETRATE = 17;	//预算增长率	    
	    public static final long EXCUTESUB = 18;	//执行差额
	    public static final long EXCUTERATE = 19;	//执行增长率
	    
	    //预算执行情况分析
	    public static final long ADJUSTBALANCE = 21;	//调整金额
	    public static final long TOTALAMOUNT = 22;	//总预算金额(带连接，金额同CURRENTBUDGET)
	    public static final long SUB = 23;	//预算金额与执行金额的差	额
	    public static final long BUDGETSTRUCTURE = 24;//预算结构
	    public static final long EXECUTESTRUCTURE = 25;//执行结构
	    	    
	    
	    public static String getName(long lCode)
	    {
	        String strReturn = "";
            switch ((int) lCode)
            {
                case (int) LASTBUDGET:
                    strReturn = "上期预算金额";
                    break;
                case (int) LASTEXECUTE:
                    strReturn = "上期实际金额";
                    break;
                case (int) LASTYEARBUDGET:
                    strReturn = "上年同期的预算金额";
                    break;
                case (int) LASTYEAREXECUTE:
                    strReturn = "上年同期的实际金额";
                    break;
                case (int) CURRENTBUDGET:
                    strReturn = "当前预算金额";
                    break;
                case (int) CURRENTEXECUTE:
                    strReturn = "执行金额";
                    break;
                case (int) ORIGINALAMOUNT:
                    strReturn = "原始预算金额";
                    break;
                case (int) EXCUTESCALE:
                    strReturn = "执行比例(%)";
                    break;
                case (int) ADJUSTSCALE:
                    strReturn = "调整比例(%)";
                    break;
                case (int) CURRENTAMOUNT:
                    strReturn = "本次金额";
                    break;
                case (int) UNCHECKBUDGET:
                    strReturn = "预算金额";
                    break;
                    
                case (int) ABUDGETAMOUNT:
                    strReturn = "A 预算金额";
                    break;
                case (int) AEXCUTEAMOUNT:
                    strReturn = "A 执行金额";
                    break;
                case (int) BBUDGETAMOUNT:
                    strReturn = "B 预算金额";
                    break;
                case (int) BEXCUTEAMOUNT:
                    strReturn = "B 执行金额";
                    break;
                case (int) BUDGETSUB:
                    strReturn = "预算差额";
                    break;
                case (int) BUDGETRATE:
                    strReturn = "预算增长率(%)";
                    break;
                case (int) EXCUTESUB:
                    strReturn = "执行差额";
                    break;
                case (int) EXCUTERATE:
                    strReturn = "执行增长率(%)";
                    break;
                case (int) ADJUSTBALANCE:
                    strReturn = "调整金额";
                    break;             
                case (int) SUB:
                    strReturn = "差额";
                    break;
                case (int) TOTALAMOUNT:
                    strReturn = "总预算金额";
                    break;
                case (int) BUDGETSTRUCTURE:
                    strReturn = "预算结构";
                    break;
                case (int) EXECUTESTRUCTURE:
                    strReturn = "执行结构";
                    break;
            }
            return strReturn;
	    }
	}
	
	public static class ConstituteStatus{
	    public static final long SAVE = 1;		//已保存
	    public static final long COMMIT = 2;	//已提交
	    public static final long CHECKING = 3;	//审核中
	    public static final long CURRENTCHECK = 4;	//本单位审核完成
	    public static final long UPPERCHECK = 5;	//上级单位审核完成
	    public static final long LASTCHECK = 6;		//最终审核完成
	    public static final long REFUSE = 7;	//拒绝
	    public static final long RETURN = 8;	//返回修改
	    public static final long DELETE = 0;	//已删除
	    
	    public static String getName(long lCode)
	    {
	        String strReturn = "";
            switch ((int) lCode)
            {
                case (int) SAVE:
                    strReturn = "已保存";
                    break;
                case (int) COMMIT:
                    strReturn = "已提交";
                    break;
                case (int) CHECKING:
                    strReturn = "审核中";
                    break;
                case (int) CURRENTCHECK:
                    strReturn = "本单位审核完成";
                    break;  
                case (int) UPPERCHECK:
                    strReturn = "上级单位审核完成";
                    break;  
                case (int) LASTCHECK:
                    strReturn = "最终审核完成";
                    break;
                case (int) REFUSE:
                    strReturn = "已拒绝";
                    break;
                case (int) RETURN:
                    strReturn = "返回修改";
                    break;
                case (int) DELETE:
                    strReturn = "已删除";
                    break;
                default :
                    strReturn = "未编制";
            }
            return strReturn;
	    }
	}
}

