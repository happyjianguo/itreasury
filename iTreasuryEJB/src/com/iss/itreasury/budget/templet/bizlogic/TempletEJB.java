/* Generated by Together */

package com.iss.itreasury.budget.templet.bizlogic;

import javax.ejb.SessionBean;
import java.rmi.RemoteException;

import com.iss.itreasury.budget.templet.dao.Budget_TempletDAO;
import com.iss.itreasury.budget.templet.dataentity.BudgetTempletInfo;
import com.iss.itreasury.budget.exception.BudgetException;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

public class TempletEJB implements SessionBean
{
private javax.ejb.SessionContext mySessionCtx = null;

	/**
	 * ejbActivate method comment
	 * @exception java.rmi.RemoteException 异常说明。
	 */
	public void ejbActivate() throws java.rmi.RemoteException
	{
	}
	/**
	 * ejbCreate method comment
	 * @exception javax.ejb.CreateException 异常说明。
	 * @exception java.rmi.RemoteException 异常说明。
	 */
	public void ejbCreate() throws javax.ejb.CreateException, java.rmi.RemoteException
	{
	}
	/**
	 * ejbPassivate method comment
	 * @exception java.rmi.RemoteException 异常说明。
	 */
	public void ejbPassivate() throws java.rmi.RemoteException
	{
	}
	/**
	 * ejbRemove method comment
	 * @exception java.rmi.RemoteException 异常说明。
	 */
	public void ejbRemove() throws java.rmi.RemoteException
	{
	}
	/**
	 * getSessionContext method comment
	 * @return javax.ejb.SessionContext
	 */
	public javax.ejb.SessionContext getSessionContext()
	{
		return mySessionCtx;
	}
	/**
	 * setSessionContext method comment
	 * @param ctx javax.ejb.SessionContext
	 * @exception java.rmi.RemoteException 异常说明。
	 */
	public void setSessionContext(javax.ejb.SessionContext ctx) throws java.rmi.RemoteException
	{
		mySessionCtx = ctx;
	}

   	/**
	 *预算模板的保存操作，要求上级项目修改完成，下级项目自动复制上级项目属性
	*/
	public long save(BudgetTempletInfo info) throws java.rmi.RemoteException,BudgetException
	{
		long returnLong=-1;
		Budget_TempletDAO dao =new Budget_TempletDAO();
		try{
			if(info.getId()>0){
				dao.update(info);
				returnLong=info.getId();				
			}else{				
				returnLong = dao.add(info);
			}			
		}catch(Exception ex){ex.printStackTrace();}
	    return returnLong;
    }
	/**
	* 删除一个项目，要求如果上级项目没有其他子项目，上级自动变为叶子项目,如果存
    * 在子项目，不允许删除
	*/
  	public long  delete(long id) throws java.rmi.RemoteException,BudgetException
  	{   
  		long systemID=-1;
  		long parentID=-1;
  		long templong=-1;
  		long retlong=-1;
  		String puanduan="0";
  		TempletEJB oper=new TempletEJB();
  		BudgetTempletInfo info=new BudgetTempletInfo();
  		Budget_TempletDAO dao =new Budget_TempletDAO();
  		try{
	  		info=oper.findByID(id);
	  		systemID=info.getBudgetSystemID();
	  		parentID=info.getParentItemID();
	  		//判断此项目是否存在别的项目公式里，如果存在不允许删除
	  		Collection col=oper.findAll(systemID);
	  		for(Iterator iter=col.iterator();iter.hasNext();){
	  			BudgetTempletInfo searInfo=(BudgetTempletInfo)iter.next();
	  			if(searInfo.getItemFormula().indexOf(String.valueOf(id))>-1){	  				
	  				puanduan="1";//不允许删除
	  			}
	  		}
	  		//有父项目且且父项目下有其他的子项目(如果只有一条就是将要删除的这条记录)
	  		if(parentID!=-1){
	  			templong=dao.checkOtherItem(parentID);
	  			if(templong!=-1 && templong>1){	  				
	  				puanduan="1";//不允许删除
	  			}	  			
	  		}
	  		
	  		//没有父项目且不在别的项目的计算公式里
	  		if(parentID==-1 && puanduan.equals("0")){
	  			dao.delete(id);	
	  			retlong=id;
	  		//有父项目且父项目没有其他的子项目并且不再别的项目公式里
	  		}else if (parentID!=-1 && puanduan.equals("0")){
	  			//修改此项目状态
	  			dao.delete(id);
	  			//修改父项目信息 
	  			info.setId(parentID);
	  			info.setIsLeaf(1);
	  			info.setIsReadOnly(1);
	  			dao.update(info);
	  			retlong=id;
	  		}
  		}catch(Exception ex){ex.printStackTrace();}
  		
  		
  		
  	  return retlong;
    }
 /**
  *   根据id查找某一项目详细信息
  */
    public BudgetTempletInfo findByID(long id) throws java.rmi.RemoteException,BudgetException {
    	BudgetTempletInfo info=new BudgetTempletInfo();
    	Budget_TempletDAO dao=new Budget_TempletDAO();
    	try{    		
    		info=(BudgetTempletInfo)dao.findByID(id,(new BudgetTempletInfo()).getClass());
    	}catch(Exception ex){ex.printStackTrace();}
        return info;
    }
	/**
	* 根据体系id查找体系内所有项目
	*/
	public Collection findAll(long ID) throws java.rmi.RemoteException,BudgetException
    {
		Collection coll=new ArrayList();
		try{
			Budget_TempletDAO dao=new Budget_TempletDAO();
			BudgetTempletInfo info=new BudgetTempletInfo();
			info.setBudgetSystemID(ID);
			info.setStatusID(1);
			coll=dao.findByCondition(info);
		}catch(Exception ex){ex.printStackTrace();}		
	    return coll;
    }
	/**
	* 校验公式的正确性，基本原则：A项目公式中包含B项目，B项目的公式不允许再包括A项目
	*/
	public boolean checkItemFormula(long id,Collection col) throws java.rmi.RemoteException, BudgetException
	{
		Budget_TempletDAO dao=new Budget_TempletDAO();
	    return false;
	}
}
