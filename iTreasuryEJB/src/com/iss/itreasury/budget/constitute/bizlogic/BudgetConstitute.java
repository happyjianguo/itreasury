/* Generated by Together */

package com.iss.itreasury.budget.constitute.bizlogic;

import com.iss.itreasury.budget.constitute.dataentity.BudgetPlanInfo;
import com.iss.itreasury.budget.exception.BudgetException;
import com.iss.itreasury.budget.query.paraminfo.QueryBudgetInfo;
import com.iss.itreasury.ebank.approval.dataentity.ApprovalTracingInfo;


import java.util.Collection;
/**
 * @author xrli
 *
 * To change the BudgetConstitute for this generated type comment go to
 * Window>Preferences>Java>Code Generation>Code and Comments
 */

public interface BudgetConstitute extends javax.ejb.EJBObject {




	/**
	 *预算编制保存操作
	*/
	public long save(BudgetPlanInfo info) throws java.rmi.RemoteException,BudgetException;
	 /**
	 *计算预算编制的操作
	*/
	public Collection calculatePlan(Collection col) throws java.rmi.RemoteException,BudgetException;

	/**
	* 查找可以调整的所有非调整的预算
	*/
    public Collection findOriginalBudget(BudgetPlanInfo info) throws java.rmi.RemoteException,BudgetException;
    
	/**
	 *查找预算编制的项目操作
	*/
	public Collection findAll(BudgetPlanInfo info) throws java.rmi.RemoteException,BudgetException;
	
	/**
	 *查找预算编制的项目模板
	*/
	public Collection findAll(QueryBudgetInfo info) throws java.rmi.RemoteException,BudgetException;
   /**
	 *查找预算编制操作
	*/
	public Collection findByCondition(BudgetPlanInfo info) throws java.rmi.RemoteException,BudgetException;
    /**
	 *查找预算编制的操作
	*/
	public BudgetPlanInfo findByPlanID(long planID) throws java.rmi.RemoteException,BudgetException;
	/**
	 *预算编制的提交操作,根据计算系数和列示选择：上期预算，上期实际，上年同期预算，
     * 上年同期实际数计算显示的编制项目金额
	*/
    public long commitBudget(BudgetPlanInfo info)throws java.rmi.RemoteException,BudgetException;
    
    /**
	 *预算编制的删除操作
     * 
	*/
    public void deleteBudget(BudgetPlanInfo info)throws java.rmi.RemoteException,BudgetException;;
    
    /**
	 * 根据预算类型获取新版本号
	 * 生成规则拟定为：预算类型（如原始预算YS、调整预算TZ、汇总预算HZ等）+预算年度（即起始日期的年度）+预算周期类型（如Y、M、D等）+周期顺序号XXX。
	 */
    public String getNewVersionNo(BudgetPlanInfo info)throws java.rmi.RemoteException,BudgetException;
       /**
	 *预算编制的审核操作
	*/
	public long check(ApprovalTracingInfo info) throws java.rmi.RemoteException,BudgetException;

	/**
	 * 根据客户和体系取得所有项目的最大级数
	 */
	public long getItemMaxLevel(long clientID,long systemID) throws java.rmi.RemoteException,BudgetException;
	
	/**
	 * 查询某单位所有的下级单位集合
	 */
	public Collection findLowerClient(long clinetID,long statusID,long officeID,long currencyID) throws java.rmi.RemoteException,BudgetException;
	
	/**
	 * 接受下级单位预算
	 */
	public void receiveLowerClientBudget(BudgetPlanInfo planInfo)throws java.rmi.RemoteException,BudgetException;
	
	public Collection findUnCheckBudget(long clientID,long userID,long officeID,long currencyID)throws java.rmi.RemoteException,BudgetException;
	
	public Collection getLowerClientBudgetStatus(BudgetPlanInfo info)throws java.rmi.RemoteException,BudgetException;
	
	public long collect(BudgetPlanInfo info)throws java.rmi.RemoteException,BudgetException;
	
	public void importExcelData(Collection c,long inputUserID)throws java.rmi.RemoteException,BudgetException;
	
	public Collection findNewConstituteTemplate(BudgetPlanInfo info)throws java.rmi.RemoteException,BudgetException;
}

