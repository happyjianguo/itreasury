package com.iss.itreasury.loan.aheadrepaynotice.bizlogic;

import java.rmi.RemoteException;
import javax.ejb.EJBObject;
import java.util.*;
import com.iss.itreasury.util.IException;
import com.iss.itreasury.util.IRollbackException;

import com.iss.itreasury.loan.aheadrepaynotice.dataentity.*;
import com.iss.itreasury.loan.loanpaynotice.dataentity.LoanPayNoticeInfo;

/**
 * Created 2003-8-15 14:50:59
 * Code generated by the Forte for Java EJB Module
 * @author yfan
 */

public interface AheadRepayNotice extends EJBObject
{

	/**
	* 生成提前还款通知单。
	* @param AheadRepayNoticeInfo
	* @return long
	* @throws Exception
	*/
	public long saveAheadRepayNotice(AheadRepayNoticeInfo info) throws RemoteException, IException;

	/**
	* 修改提前还款通知单。
	* @param AheadRepayNoticeInfo
	* @return long
	* @throws Exception
	*/
	public long updateAheadRepayNotice(AheadRepayNoticeInfo info) throws RemoteException, IException;

	/**
	* 得到提前还款通知单详细信息
	* Create Date: 2003-10-15
	* @param lID 提前还款通知单ID
	* @return AheadRepayNoticeInfo 提前还款通知单详细信息
	* @exception Exception
	*/
	public AheadRepayNoticeInfo findAheadRepayNoticeByID(long lID) throws RemoteException, IException;

	/**
	* 根据条件查询(修改)
	* Create Date: 2003-10-15
	* @param AheadRepayNoticeQueryInfo 查询条件 
	* @return Collection
	* @exception Exception
	*/
	public Collection queryForUpdate(AheadRepayNoticeQueryInfo qInfo) throws RemoteException, IException;
	/**
	* 根据条件查询合同信息(审核)
	* Create Date: 2003-10-15
	* @param ContractQueryInfo 查询条件
	* @return Collection
	* @exception Exception
	*/
	public Collection queryForExamine(AheadRepayNoticeQueryInfo qInfo) throws RemoteException, IException;
	
	
	/**
	* 审核通过 
	* Create Date: 2003-10-15
	* @param lID 
	* @param strOpinion 审核意见
	* @param lUserID 登录人ID
	* @param  lNextUserID 下一级审核人
	* @return long 如大于0表示成功，小于等于0表示失败
	* @exception Exception
	*/
	
	public long examinePass(long lID, String strOpinion, long lUserID, long lNextUserID,long lCurrencyID,
			  long lOfficeID) throws RemoteException, IException;
	
	/**
	* 审核拒绝
	* Create Date: 2003-10-15
	* @param lID 
	* @param strOpinion 审核意见
	* @param lUserID 登录人ID
	* @return long 如大于0表示成功，小于等于0表示失败
	* @exception Exception
	*/
	public long examineRefuse(long lID, String strOpinion, long lUserID,long lCurrencyID,long lOfficeID) throws RemoteException, IException;
	
	/**
	* 审核返回修正
	* Create Date: 2003-10-15
	* @param lID 
	* @param strOpinion 审核意见
	* @param lUserID 登录人ID
	* @return long 如大于0表示成功，小于等于0表示失败
	* @exception Exception
	*/
	public long examineBack(long lID, String strOpinion, long lUserID,long lCurrencyID,long lOfficeID) throws RemoteException, IException;

	
	public long doApproval(AheadRepayNoticeInfo info) throws RemoteException,IRollbackException;
	
	public long cancelApproval(AheadRepayNoticeInfo nInfo)throws RemoteException, IRollbackException;
	
	
	/**
	 * @param 
	 * @param payID 放款通知单ID
	 * @param rePayID 还款通知单ID
	 * @return 查询未还款金额
	 * @throws RemoteException
	 * @throws IException
	 */
	public double findUnRePayAmountByID(long payID,long batchID,long rePayID) throws RemoteException, IException;
	/**查询合同下的所有的放款单
	 * @throws RemoteException
	 * @throws IException
	 */
	public Collection queryForRepayNotice(AheadRepayNoticeQueryInfo qInfo) throws RemoteException, IException;
	
	/**
	* 生成批量还款通知单。
	* @param AheadRepayNoticeInfo
	* @return long
	* @throws Exception
	*/
	public long saveBatch(BatchRepayNoticeInfo bInfo) throws RemoteException, IException;
	/**
	* 得到批量还款通知单详细信息
	* Create Date: 2008-10-07
	* @param lID 批量还款通知单ID
	* @return BatchRepayNoticeInfo 批量还款通知单详细信息
	* @exception Exception
	*/
	public BatchRepayNoticeInfo findBatchAheadRepayNoticeByID(long lID) throws RemoteException, IException;
	/**
	* 修改批量还款通知单。
	* @param BatchRepayNoticeInfo
	* @return long
	* @throws Exception
	*/
	public long updateAheadRepayNotice(BatchRepayNoticeInfo info) throws RemoteException, IException;
	/**查询批量还款单下所有的放款单
	 * @throws RemoteException
	 * @throws IException
	 */
	public Collection querySaveForRepayNotice(BatchRepayNoticeInfo qInfo) throws RemoteException, IException;
	
	/**
	 * @param payID 放款通知单ID
	 * @throws RemoteException
	 * @throws IException
	 */
	public AheadRepayNoticeInfo findAheaeInfoByPayID(LoanPayNoticeInfo info) throws RemoteException, IException;
	/**
	* 得到提前还款通知单详细信息
	* Create Date: 
	* @param lID 批量还款单ID
	* @return AheadRepayNoticeInfo 提前还款通知单详细信息
	* @exception Exception
	*/
	public Collection findAheadRepayNoticeIDByBatchID(long lID) throws RemoteException, IException;
	/**批量还款单审批
	 * @throws RemoteException
	 * @throws IException
	 */
	public Collection queryAllRepayNotice(BatchRepayNoticeInfo qInfo) throws RemoteException, IException;
	
	public long doApproval(BatchRepayNoticeInfo info) throws RemoteException,IRollbackException;
	
	public long cancelBatchApproval(BatchRepayNoticeInfo nInfo)throws RemoteException, IRollbackException;
	
	/**查询审批的所有的还款单
	 * @throws RemoteException
	 * @throws IException
	 */
	public Collection queryDoApprovalRepayNotice(BatchRepayNoticeInfo qInfo) throws RemoteException, IException;
	
	/**查询批量还款单下所有已使用的还款单
	 * @author 马现福 2008-11-26
	 * @throws RemoteException
	 * @throws IException
	 */
	public Collection queryUsedRepayNotice(BatchRepayNoticeInfo qInfo) throws RemoteException, IException;
	
	/**取消批量还款单
	 * @author 马现福 2008-11-26
	 * @throws RemoteException
	 * @throws IException
	 */
	public long cancelBatchRepayNotice(BatchRepayNoticeInfo qInfo) throws RemoteException, IException;
	
}
