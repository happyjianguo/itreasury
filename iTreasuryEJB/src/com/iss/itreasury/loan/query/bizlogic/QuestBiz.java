package com.iss.itreasury.loan.query.bizlogic;

import java.rmi.RemoteException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.*;
import java.util.Collection;
import java.util.Vector;

import com.iss.itreasury.loan.freeapply.dataentity.*;
import com.iss.itreasury.loan.query.dataentity.*;
import com.iss.itreasury.util.*;
import com.iss.itreasury.loan.util.*;

/**
 * Created 2002-4-9 9:44:27
 * Code generated by the Forte for Java EJB Module
 * @author yzhang
 */

public class QuestBiz extends Object implements java.io.Serializable
{
	/**
	 * No argument constructor required by container.
	 */
	public QuestBiz()
	{
	}

    private Log4j log4j = new Log4j(Constant.ModuleType.LOAN, this); //
    /**
    * 贷款申请查询
    * <p>
    * <b>&nbsp;</b>
    * <ol><b>贷款申请查询</b>
    * <ul>
    * <li>操作数据库表LoanInfo　
    * <li>显示的申请类型，跟一般贷款申请、股份公司贷款申请和外汇贷款申请无关
    * <li>申请类型如下：委托流动、委托固定、信托流动、信托固定、贴现
    * <LI>逐笔查出满足条件的申请纪录
    * <li>和满足条件的总贷款金额
    * </ul>
    * </ol>
    * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
    *
    * @param     long        lTypeID                   贷款申请类型
    * @param     long        lLoanIDFrom               起始申请标示
    * @param     long        lLoanIDTo                 截至申请标示
    * @param     long        lStatusID                 申请状态
    * @param     long        lClientID                 借款单位
    * @param     String      strClientAccout           借款单位账号
    * @param     long        lConsignClientID          委托单位
    * @param     String      strCClientAccount         委托单位账号
    *
    * @param     long       lCurrencyID              币种标示
    * @param     long       lOfficeID                办事处标示
    *
    * @param  long          lPageLineCount         每页页行数条件
    * @param  long          lPageNo                第几页条件
    * @param  long          lOrderParam            排序条件，根据此参数决定结果集排序条件
    * @param  long          lDesc                  升序或降序
    *
    * @return Collection(Collection of QuestLoanInfo)
    * @throws Exception
    **/
    public Collection questLoanByMultiOption(
        long lTypeID,
        String strLoanCodeFrom,
        String strLoanCodeTo,
        long lStautsID,
        long lClientID,
        String strClientAccount,
        long lConsignClientID,
        String strCClientAccount,
        long lCurrencyID,
        long lOfficeID,
        long lPageLineCount,
        long lPageNo,
        long lOrderParam,
        long lDesc)
        throws RemoteException
    {
        return null;
    }

    /**
    * 贷款合同查询
    * <p>
    * <b>&nbsp;</b>
    * <ol><b>贷款合同查询</b>
    * <ul>
    * <li>操作数据库表ContractInfo　
    * <li>显示的申请类型，跟一般贷款申请、股份公司贷款申请和外汇贷款申请无关
    * <li>申请类型如下：委托流动、委托固定、信托流动、信托固定、贴现
    * <LI>逐笔查出满足条件的合同纪录
    * <li>和满足条件的总贷款金额
    * </ul>
    * </ol>
    * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
    *
    * @param     long        lTypeID                   贷款申请类型
    * @param     long        lContractIDFrom           起始合同号
    * @param     long        lContractIDTo             截至合同号
    * @param     long        lStatusID                 合同状态
    * @param     long        lClientID                 借款单位
    * @param     String      strClientAccout           借款单位账号
    * @param     long        lConsignClientID          委托单位
    * @param     String      strCClientAccount         委托单位账号
    * @param     double      dAmountFrom               起始贷款金额
    * @param     double      dAmountTo                 截至贷款金额
    * @param     Timestamp   tsDateFrom                起始贷款日期
    * @param     Timestamp   tsDateTo                  截至贷款日期
    * @param     long        lPeriod                   贷款期限
    *
    * @param     long       lCurrencyID              币种标示
    * @param     long       lOfficeID                办事处标示
    *
    * @param  long          lPageLineCount         每页页行数条件
    * @param  long          lPageNo                第几页条件
    * @param  long          lOrderParam            排序条件，根据此参数决定结果集排序条件
    * @param  long          lDesc                  升序或降序
    *
    * @return Collection(Collectoin of QuestContractInfo)
    * @throws Exception
    **/
    public Collection questContractByMultiOption(
        long lTypeID,
        long lContractIDFrom,
        long lContractIDTo,
        long lStautsID,
        long lClientID,
        String strClientAccount,
        long lConsignClientID,
        String strCClientAccount,
        double dAmountFrom,
        double dAmountTo,
        Timestamp tsDateFrom,
        Timestamp tsDateTo,
        long lPeriod,
        long lCurrencyID,
        long lOfficeID,
        long lPageLineCount,
        long lPageNo,
        long lOrderParam,
        long lDesc)
        throws RemoteException
    {
        return null;
    }

    /**
    * 合同相关文件查询
    * <p>
    * <b>&nbsp;</b>
    * <ol><b>查找与选定合同相关的文档</b>
    * <ul>
    * <li>操作数据库表ContractInfo,ContractContent　
    * <li>需查出的合同文本范围待定
    * </ul>
    * </ol>
    * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
    *
    * @param     long        lID                   合同标示
    *
    * @return ContractDocInfo
    * @throws Exception
    **/
    //public ContractDocInfo questContractDocByID(long lID) throws RemoteException;

    /**
    * 贷款展期申请查询
    * <p>
    * <b>&nbsp;</b>
    * <ol><b>贷款展期申请查询</b>
    * <ul>
    * <li>操作数据库表ExtendApply　
    * <li>显示的贷款申请类型，跟一般贷款申请、股份公司贷款申请和外汇贷款申请无关
    * <li>申请类型如下：委托流动、委托固定、信托流动、信托固定、贴现
    * <LI>逐笔查出满足条件的展期申请纪录
    * <li>和满足条件的总展期贷款金额
    * </ul>
    * </ol>
    * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
    *
    * @param     long        lTypeID                   贷款申请类型
    * @param     long        lContractIDFrom           起始合同标示
    * @param     long        lContractIDTo             截至合同标示
    * @param     long        lExtendIDFrom             起始展期申请标示
    * @param     long        lExtendIDTo               截至展期申请标示
    * @param     long        lStatusID                 申请状态
    * @param     long        lClientID                 借款单位
    * @param     String      strClientAccout           借款单位账号
    * @param     long        lConsignClientID          委托单位
    * @param     String      strCClientAccount         委托单位账号
    *
    * @param     long       lCurrencyID              币种标示
    * @param     long       lOfficeID                办事处标示
    *
    * @param  long          lPageLineCount         每页页行数条件
    * @param  long          lPageNo                第几页条件
    * @param  long          lOrderParam            排序条件，根据此参数决定结果集排序条件
    * @param  long          lDesc                  升序或降序
    *
    * @return Collection(Collection of QuestExtendInfo)
    * @throws Exception
    **/
    public Collection questExtendByMultiOption(
        long lTypeID,
        long lContractIDFrom,
        long lContractIDTo,
        long lExtendIDFrom,
        long lExtendIDTo,
        long lStautsID,
        long lClientID,
        String strClientAccount,
        long lConsignClientID,
        String strCClientAccount,
        long lCurrencyID,
        long lOfficeID,
        long lPageLineCount,
        long lPageNo,
        long lOrderParam,
        long lDesc)
        throws RemoteException
    {
        return null;
    }

    /**
    * 贷款免还申请查询
    * <p>
    * <b>&nbsp;</b>
    * <ol><b>贷款免还申请查询</b>
    * <ul>
    * <li>操作数据库表FreeApply　
    * <li>显示的贷款申请类型，只有委托流动资金贷款和委托固定资金贷款
    * <LI>逐笔查出满足条件的免还申请纪录
    * <li>和满足条件的总贷款金额、总免还金额
    * </ul>
    * </ol>
    * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
    *
    * @param     long        lTypeID                   贷款申请类型
    * @param     long        lContractIDFrom           起始合同标示
    * @param     long        lContractIDTo             截至合同标示
    * @param     long        lClientID                 借款单位
    * @param     long        lConsignClientID          委托单位
    * @param     int         nToCapital                是否转资本金
    * 
    * added by ryping on 07-08-08
    * @param	 long   	 lStatusID  		  	   状态
    * end
    *
    * @param     long       lCurrencyID              币种标示
    * @param     long       lOfficeID                办事处标示
    *
    * @param  long          lPageLineCount         每页页行数条件
    * @param  long          lPageNo                第几页条件
    * @param  long          lOrderParam            排序条件，根据此参数决定结果集排序条件
    * @param  long          lDesc                  升序或降序
    *
    * @return Collection（Collection of QuestFreeInfo）
    * @throws Exception
    **/
    public Collection questFreeByMultiOption(
        long lTypeID,
        long lContractIDFrom,
        long lContractIDTo,
        String contractCodeFrom,
        String contractCodeTo,
        long lClientID,
        String sConsignClientAccount,
        long lStatusID,
        int nToCapital,
        long lCurrencyID,
        long lOfficeID,
        long lPageLineCount,
        long lPageNo,
        long lOrderParam,
        long lDesc)
        throws Exception
    {
        Vector vReturn = new Vector(); //当前页结果集
        Connection con = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        int nIndex = 0;
        String strSQL = ""; //主SQL语句
        String strSQL_Count = ""; //SQL计算语句
        String strSQL_Select = ""; //SQL查找语句
        String strSQL_Table = ""; //SQL的表以及其之间联系语句
        String strSQL_Option = ""; //SQL查找条件
        String strSQL_Order = ""; //SQL排序条件
        double dAllLoanAmount = 0; //总申请贷款金额
        double dfreeAmount = -1; //总免还金额
        long lRecordCount = -1; //总记录数
        long lPageCount = -1; //总页数
        long lRowNumStart = -1; //开始记录
        long lRowNumEnd = -1; //结束记录

        try
        {
            log4j.info("查询免还");
            con = Database.getConnection();
            strSQL_Count = " select count(*),sum(b.MEXAMINEAMOUNT) "
                         + " ,sum(a.mfreeAmount) ";
            strSQL_Table =
                "    from loan_freeForm a "
                    + "      ,loan_contractForm b,CLIENT c,CLIENT c2 "
                    +"       ,loan_payForm d "
                    + "      ,UserInfo u1,UserInfo u2 "
                    + " where a.nContractID=b.ID(+)  "
                    + "   and b.NBORROWCLIENTID=c.ID(+) "
                    + "   and b.NConsignCLIENTID=c2.ID(+) "
                    +"    and a.nPayFormID=d.ID(+) "
                    + "   and a.nInputUserID=u1.ID(+) "
                    + "   and a.nNextCheckUserID=u2.ID(+) "
                    + "";
            strSQL_Option = " ";
            if (lTypeID > -1)
            {
                strSQL_Option += " and b.nTypeID = " + lTypeID;
            }
            if (lOfficeID > -1)
            {
                strSQL_Option += " and b.nOfficeID = " + lOfficeID;
            }
            if (lCurrencyID > -1)
            {
                strSQL_Option += " and b.nCurrencyID = " + lCurrencyID;
            }
            if ( (contractCodeFrom!=null )&&(contractCodeFrom.length()>0) )
            {
				strSQL_Option += " and b.sContractCode >= '" + contractCodeFrom +"'";
            }
			if ( (contractCodeTo!=null )&&(contractCodeTo.length()>0) )
			{
				strSQL_Option += " and b.sContractCode <= '" + contractCodeTo +"'";
			}

            if (lContractIDFrom > -1)
            {
                strSQL_Option += " and b.ID >= " + lContractIDFrom;
            }
            if (lContractIDTo > -1)
            {
                strSQL_Option += " and b.ID <= " + lContractIDTo;
            }
            if (lClientID > -1)
            {
                strSQL_Option += " and b.NBORROWCLIENTID = " + lClientID;
            }
            if(sConsignClientAccount != null && sConsignClientAccount != "")
            {
                strSQL_Option += " and a.sAccountNo = '"+sConsignClientAccount+"'";
            }
            //added by ryping on 07-08-08	//免还情况查询加“通知单状态”
            if(lStatusID > -1){
            	strSQL_Option +=" and a.nStatusID="+lStatusID;
            }else{
            	strSQL_Option += " and a.nStatusID >= " + Constant.RecordStatus.INVALID;
            }
            //end
            strSQL = strSQL_Count + strSQL_Table + strSQL_Option;
            log4j.info("  SQL=  " + strSQL);
            ps = con.prepareStatement(strSQL);
            rs = ps.executeQuery();
            if (rs != null && rs.next())
            {
                lRecordCount = rs.getLong(1); //得到总记录数
                dAllLoanAmount = rs.getDouble(2); //总申请贷款金额
                dfreeAmount = rs.getDouble(3); //总免还金额
                log4j.info("记录数=" + lRecordCount);
            }
            if (rs != null)
            {
                rs.close();
                rs = null;
            }
            if (ps != null)
            {
                ps.close();
                ps = null;
            }
            //计算总页数
            lPageCount = lRecordCount / lPageLineCount;
            if ((lRecordCount % lPageLineCount) != 0)
            {
                lPageCount++;
            }
            log4j.info("总记录数=" + lRecordCount);
            log4j.info("总页数=" + lPageCount);
            if (lRecordCount > 0)
            {
                //返回结果集， 分页显示，显示下一页
                lRowNumStart = (lPageNo - 1) * lPageLineCount + 1; //开始
                lRowNumEnd = lRowNumStart + lPageLineCount - 1; //结束
                if (lRowNumEnd > lRecordCount)
                {
                    lRowNumEnd = lRecordCount;
                }
                log4j.info("开始:"+lRowNumStart+" 结束"+lRowNumEnd);
                strSQL_Order += " order by b.sContractCode,d.sCode ";
                ///////////////////////////////////////////////////////////
                    strSQL_Select = " select a.ID as FreeApplyID " //ID
                + " ,a.sCode as FreeCode "
                + " ,a.nContractID as ContractID " //合同ID
                + " ,b.sContractCode as ContractCode " //合同编号
                + " ,b.nTypeID as LoanType "//贷款类型
                + " ,d.ID as LoanPayID "
                + " ,d.sCode as LoanPayCode "
                + " ,b.mLoanAmount " //贷款金额
                + " ,b.MEXAMINEAMOUNT"//批准金额
                + " ,b.nIntervalNum "//贷款期限
                + " ,b.dtStartDate,b.dtEndDate  "//贷款日期
                + " ,a.mFreeAmount " //
                + " ,a.dtFreeDate "
                + " ,a.mInterest "
                + " ,a.sAccountNo "
                + " ,a.sFreeReason "
                + " ,a.nStatusID "
                + " ,a.nInputUserID "
                + " ,u1.sName as InputUserName "
                + " ,a.nNextCheckUserID "
                + " ,u2.sName as CheckUserName "
                + " ,c.sName as ClientName " //借款单位
                + " ,c2.sName as ConsignName "
                +"  ";
                strSQL =
                      " select * from ( select b.*, rownum num from "
                    + " ( "
                    + strSQL_Select
                    + strSQL_Table
                    + strSQL_Option
                    + strSQL_Order
                    + " ) b )"
                    + " WHERE num BETWEEN ? AND ? ";
                    //strSQL_Select+strSQL_Table+strSQL_Option+strSQL_Order;
                log4j.info("免还查找信息 SQL: "+strSQL);
                ps = con.prepareStatement(strSQL);
                nIndex=1;
                ps.setLong(nIndex, lRowNumStart); //给入起始行号
                nIndex++;
                ps.setLong(nIndex, lRowNumEnd); //给入结束行号
                rs = ps.executeQuery();
                while(rs != null && rs.next())
                {
                    FreeApplyInfo Info = new FreeApplyInfo();
                    //log4j.info("----------1------------");
                    Info.setID(rs.getLong("FreeApplyID"));
                    Info.setFreeCode(rs.getString("FreeCode"));
                    Info.setContractID(rs.getLong("ContractID"));
                    Info.setContractCode(rs.getString("ContractCode"));
                    Info.setLoanTypeID(rs.getLong("LoanType"));
                    Info.setLoanPayID(rs.getLong("LoanPayID"));
                    Info.setLoanPayCode(rs.getString("LoanPayCode"));
                    Info.setClientName(rs.getString("ClientName"));
                    Info.setConsignClientName(rs.getString("ConsignName"));
                    //Info.setConsignClientAccount(rs.getString("sAccountNo"));
                    //Info.setAmount(rs.getDouble("mLoanAmount"));
                    Info.setAmount(rs.getDouble("MEXAMINEAMOUNT"));
                    //Info.setBalance(10000.00);
                    //log4j.info("----------2------------");
                    Info.setStartDate(rs.getTimestamp("dtStartDate"));
                    Info.setEndDate(rs.getTimestamp("dtEndDate"));
                    //Info.setIntervalNum(rs.getLong("nIntervalNum"));
                    //log4j.info("----------3------------");
                    Info.setFreeAmount(rs.getDouble("mFreeAmount"));
                    Info.setFreeDate(rs.getTimestamp("dtFreeDate"));
                    Info.setStatusID(rs.getLong("nStatusID"));
                    Info.setInputUserName(rs.getString("InputUserName"));
                    Info.setCheckUserName(rs.getString("CheckUserName"));
                    Info.setAllLoanAmount(dAllLoanAmount);
                    Info.setAllFreeAmount(dfreeAmount);
                    Info.setRecordCount(lRecordCount);
                    Info.setPageCount(lPageCount);
                    //log4j.info("----------5------------");
                    //-------------------------------------------------//
                    vReturn.addElement(Info);
                }
            }
            if (rs != null)
            {
                rs.close();
                rs = null;
            }
            if (ps != null)
            {
                ps.close();
                ps = null;
            }
            if (con != null)
            {
                con.close();
                con = null;
            }
        }
        catch (SQLException e)
        {
            log4j.error(e.toString());
            throw new IException("Gen_E001");
        }
        catch (Exception e)
        {
            log4j.error(e.toString());
            throw new IException("Gen_E001");
        }
        //////////////////////////
        return vReturn.size() <= 0 ? null : vReturn;
    }

    /**
    * 贷款合同执行计划查询
    * <p>
    * <b>&nbsp;</b>
    * <ol><b>查找贷款合同执行计划的所有版本</b>
    * <ul>
    * <li>查找贷款合同执行计划的所有版本
    * <li>
    * </ul>
    * </ol>
    * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
    *
    * @param     long        lID                   合同标示
    *
    * @return Collection(Collection of QuestContractPlanInfo)
    * @throws Exception
    **/
    public Collection questContractPlanByID(long lID) throws RemoteException
    {
        return null;
    }

    /**
    * 贷款实际执行情况查询
    * <p>
    * <b>&nbsp;</b>
    * <ol><b>查找贷款实际执行情况</b>
    * <ul>
    * <li>查找贷款实际执行情况
    * <li>用到结算模块中的数据
    * <li>
    * </ul>
    * </ol>
    * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
    *
    * @param     long        lID                   合同标示
    * @param     long        lLoanOrDiscount       信贷或贴现
    *
    * @return Collection(Collection of RepayPlanInfo)
    * @throws Exception
    **/
    //public Collection   questRealTransByID(long lID,long lLoanOrDiscount)throws RemoteException;

    public Collection questRealTransByID(long lID, long lLoanOrDiscount, long lPageLineCount, long lPageNo, long lOrderParam, long lDesc)
        throws RemoteException
    {
        return null;
    }
}