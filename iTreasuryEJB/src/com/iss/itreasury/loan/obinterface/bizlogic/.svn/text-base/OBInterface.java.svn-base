package com.iss.itreasury.loan.obinterface.bizlogic;
import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.EJBObject;
import java.util.*;
import java.sql.*;
//
import com.iss.itreasury.loan.obinterface.dataentity.*;
import com.iss.itreasury.util.*;
/**
 * Created 2003-8-15 14:50:59
 * Code generated by the Forte for Java EJB Module
 * @author yfan
 */
public interface OBInterface extends EJBObject
{
	
	/**
	 * @author  huangyan 2004-02-06 查询，操作 ob_duebill 表
	 * @param ID 申请标示
	 * @param lOfficeID 办事处标识
	 * return OBPayNoticeInfo
	 */

	public OBPayNoticeInfo findPayNoticeByID(long lID, long lOfficeID) throws IException, RemoteException;
	/**
	 * @author  huangyan 2004-02-06 查询，操作 ob_duebill 表
	 * @param ID 申请标示
	 * @param lOfficeID 办事处标识
	 * return long
	 */
	public long refusePayNotice(OBBackInfo bInfo) throws IException, RemoteException;
	/**
	 * @author  huangyan 2004-02-06 查询，操作 ob_duebill 表
	 * @param ID 申请标示
	 * @param lOfficeID 办事处标识
	 * return OBPayNoticeInfo
	 */
	public long savePayNotice(long lID, long lUserID, long lOfficeID) throws IException, RemoteException;

	/**
	 * @author  ninh 2004-02-06
	 * 查询，操作 ob_loan 表
	 * @param ID 申请标示
	 * @param lOfficeID 办事处标识
	 * return OBLoanInfo
	 */
	public OBLoanInfo findLoanByID(long lID, long lOfficeID) throws IException, RemoteException;
	/**
	 * @author  ninh 2004-02-06
	 * 保存
	 * @param lID 申请标识 ，
	 * @param lUserID   录入人
	 * @param lOfficeID 合同标识//现在是放款单标识
	 * return long 成功返回 1 ，否则 < 0
	 */
	public long saveLoan(long lID, long lUserID, long lOfficeID) throws IException, RemoteException;
	/**
	 * @author  ninh 2004-02-06
	 * @param OBBackInfo
	 * return long 成功返回 1 ，否则 < 0
	 */
	public long refuseLoan(OBBackInfo bInfo) throws IException, RemoteException;
	/**
	 * @author  
	 * 查询，操作ob_free 表
	 * @param  
	 * return OBFreeInfo
	 */
	public OBFreeInfo findFreeByID(long lID, long lOfficeID) throws IException, RemoteException;
	/**
	 * 保存
	 * @param lID 申请标识 ，如果<=0新增，否则修改
	 * @param lUserID   录入人
	 * @param lOfficeID 合同标识//现在是放款单标识
	 */
	public long saveFree(long lID, long lUserID, long lOfficeID) throws IException, RemoteException;
	/**
	 * 
	 * @param lID 申请标识 ，如果<=0新增，否则修改
	 * @param lUserID   录入人
	 * @param lOfficeID 合同标识//现在是放款单标识
	 */
	public long refuseFree(OBBackInfo bInfo) throws IException, RemoteException;
	/**
	 * Method  findExtendByID. 
	 * 查询展期
	 * @param lID
	 * @param lOfficeID
	 * @return OBExtendInfo
	 * @throws RemoteException
	 */
	public OBExtendInfo findExtendByID(long lID, long lOfficeID) throws IException, RemoteException;
	/**
	 * Method saveExtend.
	 * 接收展期指令
	 * @param lID
	 * @param lUserID
	 * @param lOfficeID
	 * @return long
	 * @throws RemoteException
	 */
	public long saveExtend(long lID, long lUserID, long lOfficeID) throws IException, RemoteException;
	/**
	 * Method refuseExtend.
	 * 拒绝网银指令
	 * @param info
	 * @return long
	 * @throws RemoteException
	 */
	public long refuseExtend(OBBackInfo info) throws IException, RemoteException;
	/**
	 * @author  ninh 2004-02-23
	 * 查询贴现凭证，操作网银OB_DiscountCredence 表
	 * @param ID 网银贴现凭证标示
	 * return OBDiscountCredenceInfo
	 */
	public OBDiscountCredenceInfo findDiscountCredenceByID(long lID, long lOfficeID) throws IException, RemoteException;
	/**
	 * @author  ninh 2004-02-23
	 * 保存贴现凭证
	 * @param lID 网银贴现凭证标识 ，
	 * @param lUserID   录入人
	 * @param lOfficeID 办事处标识
	 * return long 成功返回 1 ，否则 < 0
	 */
	public long saveDiscountCredence(long lID, long lUserID, long lOfficeID) throws IException, RemoteException;
	/**
	 * @author  ninh 2004-02-23
	 * 拒绝贴现凭证
	 * @param OBBackInfo
	 * return long 成功返回 1 ，否则 < 0
	 */
	public long refuseDiscountCredence(OBBackInfo bInfo) throws IException, RemoteException;
	/**
	 * Method findAheadByID.
	 * 查询提前放款通知单
	 * @param lID
	 * @param lOfficeID
	 * @param lCurrencyID
	 * @return OBAheadInfo
	 * @throws RemoteException
	 * @throws IException
	 */
	public OBAheadInfo findAheadByID(long lID, long lOfficeID) throws IException, RemoteException;
	/**
	 * Method saveAhead.
	 * 保存提前放款通知单
	 * @param lID
	 * @param lUserID
	 * @param lOfficeID
	 * @return long
	 * @throws RemoteException
	 * @throws IException
	 */
	public long saveAhead(long lID, long lUserID, long lOfficeID, long lCurrencyID) throws IException, RemoteException;
	/**
	 * Method refuseAhead.
	 * 拒绝提前放款通知单
	 * @param info
	 * @return long
	 * @throws RemoteException
	 * @throws IException
	 */
	public long refuseAhead(OBBackInfo info) throws IException, RemoteException;
}
