package com.iss.itreasury.loan.discount.bizlogic;

import java.rmi.RemoteException;
import java.sql.Timestamp;
import java.util.Collection;

import javax.ejb.EJBObject;

import com.iss.itreasury.loan.discount.dataentity.DiscountBillInfo;
import com.iss.itreasury.loan.discount.dataentity.DiscountCredenceInfo;
import com.iss.itreasury.loan.discount.dataentity.DiscountLoanInfo;
import com.iss.itreasury.loan.loanapply.dataentity.LoanExaminePassInfo;
import com.iss.itreasury.util.IException;
import com.iss.itreasury.util.IRollbackException;

/**
 * Created 2002-2-20 9:43:57
 * Code generated by the Forte for Java EJB Module
 * @author 
 */

public interface Discount extends EJBObject {


	/**
	 * 贴现信息（第一步）
	 * <p>
	 * <b>&nbsp;</b>
	 * <ol><b>新增或修改贴现信息</b>
	 * <ul>
	 * <li>操作数据库表DiscountApply
	 * <li>新增或修改纪录，如果lID==0，新增纪录，如果lID>0,修改纪录
	 * <li>save动作的第一步，该方法完成后，产生贷款标示
	 * </ul>
	 * </ol>
	 * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
	 *
	 * @param     long       lID                   贴现标识
	 * @param     long       lClientID             客户标识
	 * @param     long       lCurrencyID           币种
	 * @param     long       lUserID               录入人标识
	 * @param     Timestamp  tsDate                录入时间
	 * @param     long       lOfficeID             办事处标识
	 *
	 * @return    long     新增或修改成功，返回值 == lID，失败，返回值 == 0。
	 *
	 * @exception Exception
	 **/

	public long saveDiscount(DiscountLoanInfo info) throws RemoteException,IException;

	/**
	 * 贴现申请详情存盘（第二步）
	 * @param lID 贴现标识
	 * @param lApplyDiscountPO 申请汇票贴现张数
	 * @param lBankAcceptPO 银行承兑汇票张数
	 * @param lBizAcceptPO 商业承兑汇票张数
	 * @param dAmount 申请贴现金额
	 * @param strReason 贴现原因
	 * @param strPurpose 贴现目的
	 * @param lInputUserID 录入人标识
	 * @param tsDate 录入日期
	 * @return 返回贴现标识
	 */
	/*public long saveDiscountDetails(
		long lID,
		long lApplyDiscountPO,
		long lBankAcceptPO,
		long lBizAcceptPO,
		double dAmount,
		String strReason,
		String strPurpose,
		long lInputUserID,
		Timestamp tsDate,
		Timestamp tsDiscountStartDate)*/
	public long saveDiscountDetails(DiscountLoanInfo info)
		throws RemoteException,IException;

	/**
	 * 提交贴现
	 * @param lID 贴现标识
	 * @return
	 */
	public long submitDiscount(long lID) throws RemoteException,IException;

	/**
	 * 查找一条贴现信息，操作数据库表DiscountApply，
	 * @param lDiscountID 贴现标识
	 */
	public DiscountLoanInfo findDiscountByID(long lDiscountID) throws RemoteException,IException;

	/**
	* 查找一条贴现信息，操作数据库表DiscountApply，
	* @param lDiscountID 贴现标识
	*/
	public DiscountCredenceInfo findDiscountCredenceByID(long lDiscountCredenceID) throws RemoteException,IException;

	/**
	 * 查找贴现,操作DiscountApply
	 * <br>lDiscountApplyIDFrom和lDiscountApplyIDTo，同一类型的合同的流水号的部分作为查询范围
	 * <br>如果是修改贴现查询，需要查录入人是lUserID的，如果复核贴现查询，需要查录入人不是lUserID的或者复核人是lUserID的
	 * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
	 * @param lCurrencyID 币种标识
	 * @param lOfficeID 办事处标识
	 * @param lActionID 动作，修改或者复核
	 * @param lUserID 操作人标识
	 * @param lDiscountApplyIDFrom 贴现标识起始
	 * @param lDiscountApplyIDTo 贴现标识结束
	 * @param lClientID 申请单位标识
	 * @param dAmountFrom 贴现金额起始
	 * @param dAmountTo 贴现金额结束
	 * @param tsInputStart 录入日期起始
	 * @param tsInputEnd 录入日期结束
	 */
	public Collection findDiscountByMultiOption(
		long lCurrencyID,
		long lOfficeID,
		long lActionID,
		long lUserID,
		long lDiscountApplyIDFrom,
		long lDiscountApplyIDTo,
		long lClientID,
		double dAmountFrom,
		double dAmountTo,
		Timestamp tsInputStart,
		Timestamp tsInputEnd,
		long lStatusID,
		long lPageLineCount,
		long lPageNo,
		long lOrderParam,
		long lDesc)
		throws RemoteException,IException;
	/**
	 * 保存贴现票据信息，操作DiscountBill表
	 * @param lDiscountBillID 贴现票据标识，如果<=0，新增，否则，修改。新增ID取最大值
	 * @param lDiscountApplyID 贴现标识
	 * @param strUser 原始出票人
	 * @param strBank 承兑银行
	 * @param lIsInBeijing 是否在北京
	 * @param tsCreate 出票日
	 * @param tsEnd 到期日
	 * @param strCode 汇票号码
	 * @param dAmount 汇票金额
	 */
	public long saveDiscountBill(
		long lDiscountBillID,
		long lDiscountApplyID,
		String strUser,
		String strBank,
		long lIsLocal,
		Timestamp tsCreate,
		Timestamp tsEnd,
		String strCode,
		double dAmount,
		long lAddDay,
		long lAcceptPOTypeID,
		String strFormerOwner,
		long lCurrencyID,
		long lOfficeID,
		String payee)
		throws RemoteException,IException;
	
	
	public long doApprovalDiscountCredence(DiscountCredenceInfo cInfo) throws RemoteException,
	IRollbackException,IException;

	/**
	 * 查找一条贴现信息，操作数据库表DiscountBill，
	 * @param lDiscountID 贴现标识
	 */
	
	public DiscountBillInfo findDiscountBillByID(long lDiscountBillID) throws RemoteException,IException;
	/**
	 * 查询一个贴现申请下的贴现票据，操作DiscountBill表
	 * @param lDiscountApplyID 贴现标识
	 * @return 返回贴现票据的列表
	 */
	public Collection findDiscountBillByDiscountID(long lDiscountApplyID, long lPageLineCount, long lPageNo, long lOrderParam, long lDesc)
		throws RemoteException,IException;
	/**
	 * 查询一个贴现申请下的贴现票据，操作DiscountBill表
	 * @param lDiscountApplyID 贴现标识
	 * @return 返回贴现票据的列表
	 */
	public Collection findDiscountBillByApplyID(long lDiscountApplyID, long lDiscountBillID)
		throws RemoteException,IException;

	/**
	* 查询一个贴现申请下的贴现票据，操作DiscountBill表
	* @param lDiscountApplyID 贴现标识]
	* @param  dRate        贴现利率
	* @param  tsDate       贴现日
	* @return 返回贴现票据的列表
	*/
	public Collection findDiscountBillByDiscountID(
		long lDiscountApplyID,
		
		long lPageLineCount,
		long lPageNo,
		long lOrderParam,
		long lDesc,
		
		double dRate,
		Timestamp tsDate)
		throws RemoteException,IException;
	
	/**
	* 查询一个贴现申请下的贴现票据，操作DiscountBill表
	* @param  dParchaserRate        买方付息比例
	* @return 返回贴现票据的列表
	*/
	public Collection findDiscountBillByDiscountID(
		long lDiscountApplyID,
		
		long lPageLineCount,
		long lPageNo,
		long lOrderParam,
		long lDesc,
		
		double dRate,
		double dParchaserRate,
		Timestamp tsDate)
		throws RemoteException,IException;

	public Collection findDiscountBillByContractID(long lDiscountContractID,
												  long lPageLineCount,
												  long lPageNo,
												  long lOrderParam,
												  long lDesc) throws RemoteException,IException;


	/**
	 * 删除贴现票据，操作DiscountBill表，更改状态为已删除
	 * @param lDiscountBillID 贴现票据标识
	 * @return
	 */
	public long deleteDiscountBill(long lDiscountBillID[]) throws RemoteException,IException;

	/**
	 * 将贴现凭证存盘，操作DiscountCredence表
	 * @param lDiscountCredenceID 贴现凭证标识，如果<=0新增，否则修改
	 * @param lDiscountApplyID 贴现申请标识
	 * @param tsInputDate 填写日期
	 * @param lDraftTypeID 贴现汇票种类
	 * @param strDraftCode 贴现汇票号码
	 * @param tsPublicData 发票日
	 * @param tsAtTerm 到期日
	 * @param strApplyClient 申请单位名称
	 * @param strApplyAccount 申请单位账户号
	 * @param strApplyBank 申请单位开户银行
	 * @param strAcceptClient 承兑单位名称
	 * @param strAcceptAccount 承兑单位账户
	 * @param strAcceptBank 承兑单位开户银行
	 * @param dAmount 承兑金额
	 * @param fRate 利率
	 * @param dInterest 应付利息
	 * @return 返回贴现凭证标识
	 */
	public long saveDiscountCredence( DiscountCredenceInfo info	)
		throws RemoteException,IException;

	/**
	 * 查找贴现,操作DiscountCredence
	 * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
	 * @param lCurrencyID 币种标识
	 * @param lOfficeID 办事处标识
	 * @param lActionID 操作标识
	 * @param lUserID 操作人标识
	 * @param lDiscountApplyID 贴现标识
	 * @param lClientID 申请单位标识
	 * @param dAmountFrom 贴现金额起始
	 * @param dAmountTo 贴现金额结束
	 * @param tsInputStart 录入日期起始
	 * @param tsInputEnd 录入日期结束
	 * @param lStatusID 状态标识
	 */
	public Collection findDiscountCredenceByMultiOption(
		long lCurrencyID,
		long lOfficeID,
		long lActionID,
		long lUserID,
		long lContractID,
		long lClientID,
		double dAmountFrom,
		double dAmountTo,
		Timestamp tsStart,
		Timestamp tsEnd,
		long lStatusID,
		long lPageLineCount,
		long lPageNo,
		long lOrderParam,
		long lDesc)
		throws RemoteException,IException;

	/**
	 * 贴现信息
	 * <p>
	 * <b>&nbsp;</b>
	 * <ol>
	 * <ul>
	 * <li>操作数据库表DiscountApply
	 * <li>
	 * <li>
	 * </ul>
	 * </ol>
	 * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
	 *
	 * @param     long        lID                   贴现标识
	 * @param     double      mExamineAmount        批准贴现金额
	 * @param     double      fDiscountRate         贴现利率
	 * @param     double      mCheckAmount     	核定贴现金额
	 * @return    long     新增或修改成功，返回值 == lID，失败，返回值 == 0。
	 *
	 * @exception Exception
	 **/

	//public long saveCheck(long lID, double mExamineAmount, double fDiscountRate, double mCheckAmount, Timestamp tsDate) throws RemoteException,IException
	public long saveCheck(DiscountLoanInfo info) throws RemoteException,IException;
	///////////////////////////////////////////////////////////////////////
    
	public long submitApplyAndApprovalInit(DiscountLoanInfo info)
	throws RemoteException, IRollbackException;
	
	public long modifyApplyAndApprovalInit(DiscountLoanInfo info)
	throws RemoteException, IRollbackException;
	
	public long examinePass(DiscountLoanInfo lxpInfo)
	throws RemoteException, IRollbackException;

   
	/**
	 * 新增审批意见
	 * <p>
	 * <b>&nbsp;</b>
	 * <ol><b>新增审批意见</b>
	 * <ul>
	 * <li>操作数据库表ReviewOpinion,discountApply
	 * <li>如果审批决定是拒绝，修改带审批的主体状态
	 * </ul>
	 * </ol>
	 * @Copyright (c) Jan. 2002, by iSoftStone Inc. All Rights Reserved
	 * @param     long        nReviewTypeID         审批类型
	 * @param     long        nReviewContentID      审批类型
	 * @param     String      sOpinion              审批意见
	 * @param     long        nUserID               审批人标示
	 * @param     long        nNextUserID           下一个审批人标示
	 * @param     long        nResultID             审批结果
	 * @param     long        nStatusID             是否最终审批 1--是 0--否
	 * @param     long        action                审批，拒绝，修改
	 * @param     double      mExamineAmount        批准贴现金额
	 * @param     double      fDiscountRate         贴现利率
	 * @param     double      mCheckAmount     	核定贴现金额
	 * @return    long     新增成功，返回值 == 1，失败，返回值 == -1
	 * @exception Exception
	 **/
	public long checkDiscount(
		long lApprovalContentID,
		String sOpinion,
		long lUserID,
		long lNextUserID,
		long lAction,
		double mExamineAmount,
		double fDiscountRate,
		double mCheckAmount,
		long lCurrencyID,
		long lOfficeID)
		throws RemoteException,IException;

	////////////////////////////////////////////////////////////////

	/**
	 * 取消贴现申请，
	 * @param lDiscountID 贴现标识
	 */
	public long cancelDiscountByID(long lDiscountID) throws RemoteException,IException;

	public long cancelDiscountCredenceByID(long lDiscountCredenceID) throws RemoteException,IException;
	public long checkDiscountCredence(
		long lApprovalContentID,
		String sOpinion,
		long lUserID,
		long lNextUserID,
		long lAction,
		long lCurrencyID,
		long lOfficeID)
		throws RemoteException,IException;

	/**
	 * 将贴现凭证对应的贴现票据存盘，操作DiscountCredence表
	 * @param lDiscountCredenceID 贴现凭证标识，如果<=0计算，否则计算并修改
	 * @param lDiscountContractID 贴现合同标识
	 * @return 返回贴现凭证标识
	 */
	public long saveDiscountCredenceBill(long lDiscountCredenceID, long lDiscountContractID, long lDiscountBillID[]) throws RemoteException,IException;

	/**
	 * 查询一个贴现申请下的贴现票据并计息，操作DiscountBill表
	 * @param lContractID 贴现合同标识
	 * @param lDiscountCredenceID 贴现凭证标识
	 * @return 返回贴现票据的列表
	 */
	public Collection findBillInterestByID(long lContractID, long lDiscountCredenceID, long lPageLineCount, long lPageNo, long lOrderParam, long lDesc)
		throws RemoteException,IException;

	/**
	 * 计算给定的贴现票据利息，操作DiscountBill表
	 * @param lContractID 贴现合同标识
	 * @param strBillID 贴现票据标识字符串，逗号分割
	 * @return 返回贴现票据的列表
	 */
	public DiscountBillInfo findBillInterestByBillID(long lContractID, String strBillID) throws RemoteException,IException;


    
    /**
     * 更新票据状态
     * @param lLoanID
     * @param 
     * @return
     * @throws RemoteException
     * @throws IException
     */ 
    
    public long updateDiscountBillStatus(long loanID, long checkID) throws RemoteException,IException;
    /**
     * 更新贷款申请是否走最小审核级别字段
     * @param lLoanID
     * @param isLowLevel
     * @return
     * @throws RemoteException
     * @throws IException
     */    
	public long updateLoanCheckLevel(long loanID, long isLowLevel) throws RemoteException,IException;
    
    
	
    /**
    * 查询一个贴现凭证下的贴现票据，操作DiscountBill表
    * @param lDiscountCredenceID 贴现凭证标识]
    * @param  dRate        贴现利率
    * @param  tsDate       贴现日
    * @return 返回贴现票据的列表
    */
    public Collection calBillByCredenceID(
        long lDiscountCredenceID,
        long lPageLineCount,
        long lPageNo,
        long lOrderParam,
        long lDesc//,
        //double dRate,
        //Timestamp tsDate
        )
        throws RemoteException,IException  ;

 
	public Collection saveDiscountBillInfo( 
                               long  recordId,  //记录编号
                               long lPageLineCount,                                        
	                           long lPageNo,
	                           Timestamp        nCheckDate, //审查日期
                               String  nCheckId ,             //'查复编号'; 
                               long    nCheckStatus   //'审查状态';
            ) throws RemoteException,IException ;
	///贴现票据查询  
	public Collection findDiscountBillInfo(            
            long lPageLineCount,                                           
            long lPageNo,                                               
            long lOrderParam,                                           
            long   lDesc,
            long   nContractId,   //票据id 
            long             nContractIdFrom,       // 合同From
                    long             nContractIdTo,         // 合同to
                    String           sCode,               //汇票号码
                   double           mAmountFrom,           //汇票金额from
                   double           mAmountTo,            //汇票金额to
                    Timestamp        dtCheckDateFrom,    //审查日期From
                     Timestamp        dtCheckDateTo,    //审查日期To
                    long             nCheckStatus          //'审查状态';
    ) throws RemoteException,IException ;	
  
	
//	/贴现票据查询  
	public Collection findDiscountBillStatusInfo(            
            long lPageLineCount,                                           
            long lPageNo,                                               
            long lOrderParam,                                           
            long   lDesc,
            long   nContractId,   //票据id 
            long             nContractIdFrom,       // 合同From
                    long             nContractIdTo,         // 合同to
                    String           sCode,               //汇票号码
                   double           mAmountFrom,           //汇票金额from
                   double           mAmountTo,            //汇票金额to
                    Timestamp        dtCheckDateFrom,    //审查日期From
                     Timestamp        dtCheckDateTo,    //审查日期To
                    long             nCheckStatus,          //'审查状态';
					
					long             nBillStatusId,       //票据状态-
					Timestamp         dCancelDateFrom,      //销账日期From-
					Timestamp         dCancelDateTo ,     //销账日期To-
					
					String             checkcodestr,       //复查编号
		            Timestamp          dtendFrom,          //票据到期日期 from
		            Timestamp           dtendTo            //票据到期日期 to
					
    ) throws RemoteException,IException ;	

	
	public long cancelApproval(DiscountCredenceInfo dInfo)throws RemoteException, IRollbackException;
	
	//Modify by leiyang date 2007/07/26
	public long checkContract(DiscountLoanInfo dlInfo)
			throws RemoteException, IRollbackException;
	
	public long cancelApproval(DiscountLoanInfo dlInfo)
			throws RemoteException, IRollbackException;
	
	public long findDiscountBillCountByLoanID(long lLoanID)throws RemoteException,IException;
	
    }
