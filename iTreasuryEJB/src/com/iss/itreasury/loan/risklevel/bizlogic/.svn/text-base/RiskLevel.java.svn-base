package com.iss.itreasury.loan.risklevel.bizlogic;

import java.rmi.RemoteException;
import javax.ejb.EJBObject;
import java.util.*;
import java.sql.*;
import java.lang.*;

import com.iss.itreasury.loan.contractstatus.dataentity.ContractStatusInfo;
import com.iss.itreasury.loan.risklevel.dataentity.*;
import com.iss.itreasury.system.approval.dataentity.InutParameterInfo;
import com.iss.itreasury.util.IRollbackException;

/**
 * Created 2003-8-15 14:50:59
 * Code generated by the Forte for Java EJB Module
 * @author yfan
 */

public interface RiskLevel extends EJBObject {
	/**
	 * 提交、修改提前还款通知单，操作AheadRepayRequisition
	 * <br>新增ContractStatus信息,ID取最大值
	 * @param lID 提前还款通知单标识
	 * @param lOfficeID 办事处标识
	 * @param lCurrencyID 币种
	 * @param lContractID 合同标识
	 * @param lLetoutNoticeID 放款通知单标识
	 * @param strCode 编码
	 * @param dAmount 提前还款金额
	 * @param lUserID 录入人
	 * @param tsDate 录入时间
	 */													
	public long saveRiskLevel(	long lID,
										long lOfficeID,
										long lCurrencyID,
										long lContractID,
										long lOldRiskLevelID,
										long lNewRiskLevelID,							
                          				long lUserID,
                          				Timestamp tsDate,
                          				String strChangeReason,
                          				Timestamp effectDate )throws RemoteException, IRollbackException;	
																					
	public long saveRiskLevel(	long lID,
										long lOfficeID,
										long lCurrencyID,
										long lContractID,
										long lOldRiskLevelID,
										long lNewRiskLevelID,							
											long lUserID,
											Timestamp tsDate,
											String strChangeReason,
											Timestamp effectDate,
											InutParameterInfo pInfo)throws RemoteException, IRollbackException;	
	
	/**
	 * 查找提前还款通知单，查找RiskLevel表
	 * <br>如果lContractID后面的参数的值合法，做查询条件；否则不做查询条件。
	 * @param lCurrencyID 币种标识
	 * @param lOfficeID 办事处标识
	 * @param lUserID 查询人
	 * @param lActionID 动作，提交或者复核
	 * @param lContractID 合同标识
	 * @param lClientID 借款单位标识
	 * @param dAmountFrom 金额(由)
	 * @param dAmountTo 金额(到)
	 * @param tsDateFrom 提交日期起始
	 * @param tsDateTo 提交日期结束
	 * @param lStatusID 放款通知单状态
	 */
	public Collection findRiskLevelByMultiOption(
													long lCurrencyID,
													long lOfficeID,
													long lUserID, 
													long lActionID,
													Timestamp tsDateFrom,
													Timestamp tsDateTo,
                          							long lStatusID,
                          							long lPageLineCount,
                          							long lPageNo,
                          							long lOrderParam,
                          							long lDesc ) throws RemoteException;
																					

  
   /**
   	* 取消提前还款通知单
   	* @param lRiskLevelID 标识
   	*/
  	public long cancelRiskLevelByID (long lRiskLevelID) throws RemoteException, IRollbackException;

  
   /**
    * 查找提前还款通知单
    * @param lRiskLevelID 标识
  	*/
   	public RiskLevelInfo findRiskLevelByID (long lRiskLevelID) throws RemoteException;

	
   /**
    * 审核提前还款通知单
    * @param lReviewContentID 提前还款通知单标识
  	*/
	public long checkRiskLevel (	long    lReviewContentID,
    									String  strOpinion,
    									long    lUserID,
    									long    lNextCheckUserID,
    									long    lAction,
    									long lCurrencyID,
    									long lOfficeID) throws RemoteException, IRollbackException ;
	
	public long doApproval(ContractStatusInfo contractStatusInfo) throws RemoteException, IRollbackException;

	public long cancelApproval(ContractStatusInfo contractStatusInfo) throws RemoteException, IRollbackException;
}