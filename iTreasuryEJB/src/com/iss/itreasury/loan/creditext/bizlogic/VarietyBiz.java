/* Generated by Together */

package com.iss.itreasury.loan.creditext.bizlogic;

import com.iss.itreasury.loan.creditext.dao.VarietyDAO;
import com.iss.itreasury.loan.creditext.dataentity.VarietyInfo;
import com.iss.itreasury.util.Constant;
import com.iss.itreasury.util.IException;
import com.iss.itreasury.util.Log4j;

import java.sql.SQLException;
import java.util.Collection;

public class VarietyBiz {
	
	private Log4j log4j = new Log4j(Constant.ModuleType.LOAN, this);
	
	//按授信品种编号查出对应的授信品种
	public VarietyInfo getVarietyInfoByCode(String code) throws IException{
		VarietyInfo vInfo = null;
		VarietyDAO vDao = new VarietyDAO();
		try {
			vInfo = vDao.getVarietyInfoByCode(code);
		} catch (Exception e) {
			log4j.error(e.toString());
			e.printStackTrace();
			throw new IException("GEN_E001");
		}
		return vInfo;
	}
	
	//获得所有的授信品种
	public Collection getAllVarietyInfo() throws IException{
		Collection vList = null;
		VarietyDAO vDao = new VarietyDAO();
		try {
			vList = vDao.getAllVarietyInfo();
		} catch (Exception e) {
			log4j.error(e.toString());
			e.printStackTrace();
			throw new IException("GEN_E001");
		}
		return vList;
	}
	
	//添加授信品种
	public boolean insert(VarietyInfo info) throws IException{
		boolean isInserted = false;
		VarietyDAO vDao = new VarietyDAO();
		try {
			isInserted = vDao.insert(info);
		} catch (Exception e) {
			log4j.error(e.toString());
			e.printStackTrace();
			throw new IException("GEN_E001");
		}
		return isInserted;
	}
	
	//删除授信品种
	public boolean delete(String code) throws IException{
		boolean isDeleted = false;
		boolean isUsed = true;
		VarietyDAO vDao = new VarietyDAO();
		try {
			if(code != null && !code.equals("")){
				isUsed = isUsed(code);
				if(!isUsed){
					isDeleted = vDao.delete(code);
				}
			}
			
		} catch (Exception e) {
			log4j.error(e.toString());
			e.printStackTrace();
			throw new IException("GEN_E001");
		}
		return isDeleted;
	}
	
	
	//判断该授信品种是否被使用
	private boolean isUsed(String code) {
		return false;
	}
	
	
	//修改授信品种信息
	public boolean modify(VarietyInfo info) throws IException{
		boolean isModified = false;
		VarietyDAO vDao = new VarietyDAO();
		try {
			isModified = vDao.modify(info);
		} catch (Exception e) {
			log4j.error(e.toString());
			e.printStackTrace();
			throw new IException("GEN_E001");
		}
		return isModified;
	}
	
	//根据上级编号自动生成授信品种编号
	public String getNextCode(String superCode) throws IException{
		String nextCode = null;
		VarietyDAO vDao = new VarietyDAO();
		try {
			nextCode = vDao.getNextCode(superCode);
		} catch (Exception e) {
			log4j.error(e.toString());
			e.printStackTrace();
			throw new IException("GEN_E001");
		}
		return nextCode;
	}
	
	//判断是否预定义的授信品种
	public boolean isPredefined(int predefined) {
		boolean isPredefined = false;
		if(predefined == 0){
			isPredefined = true;
		}
		return isPredefined;
	}
	
	public int parsePredefined(boolean isPredefined) {
		if(!isPredefined){
			return 1;
		}
		else return 0;
	}
	
	//根据授信品种编号获得上级编号
	public String getSuperCode(String code) {
		String superCode = null;
		if(code != null && code.length() > 4){
			superCode = code.substring(0,code.length()-2);
			return superCode;
		}
		else return code;
	}
}
