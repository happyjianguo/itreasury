package com.iss.itreasury.securities.securitiescontractplan.bizlogic;

import com.iss.itreasury.dao.ITreasuryDAOException;
import com.iss.itreasury.securities.securitiescontractplan.dao.*;
import com.iss.itreasury.securities.securitiescontract.dataentity.*;
import com.iss.itreasury.securities.securitiescontractplan.dataentity.*;
import com.iss.itreasury.securities.exception.*;
import com.iss.itreasury.securities.util.*;
import com.iss.itreasury.system.bizlogic.*;
import com.iss.itreasury.system.approval.dataentity.*;
import com.iss.itreasury.util.*;
/**
 * Created 2004-3-15 15:01:53
 * Code generated by the Sun ONE Studio EJB Builder
 * @author cpf
 */

public interface SecuritiesContractPlan extends javax.ejb.EJBObject {
	
	/**
	 * 修改执行计划-查找合同
	 * @param qInfo
	 * @return
	 * @throws java.rmi.RemoteException
	 * @throws SecuritiesException
	 */    
	public java.util.Collection findByMultiOption(SecuritiesContractQueryInfo qInfo) throws java.rmi.RemoteException,SecuritiesException;

	/**
	 * 根据合同查找合同的版本列表
	 * @param lID
	 * @return
	 * @throws java.rmi.RemoteException
	 * @throws SecuritiesException
	 */
	public java.util.Collection findPlanVerByContract(long lID) throws java.rmi.RemoteException,SecuritiesException;
	
	/**
	 * 根据执行计划版本查找该版本计划明细列表
	 * @param lID
	 * @return
	 * @throws java.rmi.RemoteException
	 * @throws SecuritiesException
	 */
	public java.util.Collection findPlanDetailByVer(long lID) throws java.rmi.RemoteException,SecuritiesException;
	
	/**
	 * 根据合同查找最新版本的计划明细
	 * @param lID
	 * @return
	 * @throws java.rmi.RemoteException
	 * @throws SecuritiesException
	 */
	public java.util.Collection findPlanDetailByContract(long lID) throws java.rmi.RemoteException,SecuritiesException;
	
	public SecuritiesContractPlanVersionInfo findLastPlanVersionByContract(long lID) throws java.rmi.RemoteException,SecuritiesException;
	
	/**
	 * 根据明细ID查找明细的详细内容
	 * @param lID
	 * @return
	 * @throws java.rmi.RemoteException
	 * @throws SecuritiesException
	 */
	public SecuritiesContractPlanDetailInfo findByID(long lID) throws java.rmi.RemoteException,SecuritiesException;
	
	/**
	 * 自动安排计划
	 * @param autoInfo
	 * @throws java.rmi.RemoteException
	 * @throws SecuritiesException
	 */
	public void autoSavePlan(SecuritiesContractAutoPlanInfo autoInfo) throws java.rmi.RemoteException,SecuritiesException;
	
	/**
	 * 保存计划明细，包括新增和修改
	 * @param c
	 * @throws java.rmi.RemoteException
	 * @throws SecuritiesException
	 */
	public void savePlanDetail(java.util.Collection c) throws java.rmi.RemoteException,SecuritiesException;
	
	/**
	 * 删除计划明细，支持批量删除
	 * @param lID
	 * @throws java.rmi.RemoteException
	 * @throws SecuritiesException
	 */
	public void deletePlanDetail(long lID[]) throws java.rmi.RemoteException,SecuritiesException;
	
	/**
	 * 在从就版本修改时需要先生成一个新版本并复制明细，然后修改新版本的明细
	 * @param lID
	 * @param lContractID
	 * @return
	 * @throws java.rmi.RemoteException
	 * @throws SecuritiesException
	 */
	public long createPlanVersion(long lID,long lContractID) throws java.rmi.RemoteException,SecuritiesException;
	
	/**
	 * 审核执行计划修改
	 * @param atInfo
	 * @return
	 * @throws java.rmi.RemoteException
	 * @throws SecuritiesException
	 */
	public long checkPlan(ApprovalTracingInfo atInfo) throws java.rmi.RemoteException,SecuritiesException;
	
	public long createPlanVersion(long lID, long lContractID, long lUserID, long lOfficeID) throws java.rmi.RemoteException;
	
	public long createTempPlanVersion(long lID, long lContractID, long lUserID, long lOfficeID) throws java.rmi.RemoteException;
}