package com.iss.itreasury.settlement.offbalance.bizlogic;

import java.util.Collection;

import com.iss.itreasury.settlement.offbalance.dataentity.OffBalanceInfo;
import com.iss.itreasury.settlement.offbalance.dataentity.OffBalanceParam;
import com.iss.itreasury.settlement.offbalance.exception.OffBalanceException;

/**
 * Created 2004-9-24 23:29:07
 * Code generated by the Sun ONE Studio EJB Builder
 * @author yiwang
 */
public interface OffBalance extends javax.ejb.EJBObject {
    /**
     * 保存记录
     * @param  OffBalanceParam parameter
     * @return void
     * @exception throws java.rmi.RemoteException, OffBalanceException
     */
    public void save(OffBalanceParam parameter) throws java.rmi.RemoteException, OffBalanceException;

    /**
     * 修改记录
     * @param  OffBalanceParam parameter
     * @return void
     * @exception throws java.rmi.RemoteException, OffBalanceException
     */
    public void update(OffBalanceParam parameter) throws java.rmi.RemoteException, OffBalanceException;

    /**
     * 删除记录
     * @param  OffBalanceParam parameter
     * @return void
     * @exception throws java.rmi.RemoteException, OffBalanceException
     */
    public void delete(OffBalanceParam parameter) throws java.rmi.RemoteException, OffBalanceException;

    /**
     * 通过ID查找结果集
     * @param  long id
     * @return OffBalanceInfo
     * @exception throws java.rmi.RemoteException, OffBalanceException
     */
    public OffBalanceInfo findByID(long id) throws java.rmi.RemoteException, OffBalanceException;

    /**
     * 通过条件查找结果集
     * @param  OffBalanceInfo info, String orderByString
     * @return Collection
     * @exception throws java.rmi.RemoteException, OffBalanceException
     */
    public Collection findByCondition(OffBalanceInfo info, String orderByString) throws java.rmi.RemoteException, OffBalanceException;

	/**
	 * 复核
	 * @param  OffBalanceParam parameter
	 * @return void
	 * @exception throws java.rmi.RemoteException, OffBalanceException
	 */
	public void check(OffBalanceParam parameter) throws java.rmi.RemoteException, OffBalanceException;

	/**
	 * 取消复核
	 * @param  OffBalanceParam parameter
	 * @return void
	 * @exception throws java.rmi.RemoteException, OffBalanceException
	 */
	public void cancleCheck(OffBalanceParam parameter) throws java.rmi.RemoteException, OffBalanceException;

    /**
     * 检查时间戳
     * 
     * 当录入页面的时间戳与数据库里的不相同时.检查记录状态，给前台打出时间戳不同的原因。
     */
    public OffBalanceInfo checkTimeStamp(OffBalanceParam offBalanceParam) throws  java.rmi.RemoteException, OffBalanceException;

	/**
	 * 表外业务明细账查询
	 * @param  OffBalanceParam parameter
	 * @return Collection
	 * @exception throws java.rmi.RemoteException, OffBalanceException
	 */
    public Collection findTableOutsideDetail(OffBalanceParam parameter,
            String orderByString) throws java.rmi.RemoteException, OffBalanceException;

	/**
	 * 表外业务汇总查询
	 * @param  OffBalanceParam parameter
	 * @return Collection
	 * @exception throws java.rmi.RemoteException, OffBalanceException
	 */
	public Collection findTableOutsideCollect(OffBalanceParam parameter) throws java.rmi.RemoteException, OffBalanceException;
}