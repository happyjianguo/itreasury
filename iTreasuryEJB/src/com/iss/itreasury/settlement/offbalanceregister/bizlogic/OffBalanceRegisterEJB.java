package com.iss.itreasury.settlement.offbalanceregister.bizlogic;

import java.util.Collection;

import com.iss.itreasury.settlement.offbalanceregister.dao.OffBalanceRegisterDAO;
import com.iss.itreasury.settlement.offbalanceregister.dataentity.OffBalanceRegisterInfo;
import com.iss.itreasury.settlement.offbalanceregister.exception.OffBalanceRegisterException;
import com.iss.itreasury.settlement.offbalanceregister.exception.OffBalanceRegisterDAOException;

/**
 * Created 2004-9-24 23:29:07
 * Code generated by the Sun ONE Studio EJB Builder
 * @author yiwang
 */
public class OffBalanceRegisterEJB implements javax.ejb.SessionBean {
    private javax.ejb.SessionContext context;
    private OffBalanceRegisterDAO offBalanceRegisterDAO = new OffBalanceRegisterDAO();

    /**
     * @see javax.ejb.SessionBean#setSessionContext(javax.ejb.SessionContext)
     */
    public void setSessionContext(javax.ejb.SessionContext aContext) {
        context=aContext;
    }

    /**
     * @see javax.ejb.SessionBean#ejbActivate()
     */
    public void ejbActivate() {
    }

    /**
     * @see javax.ejb.SessionBean#ejbPassivate()
     */
    public void ejbPassivate() {
    }

    /**
     * @see javax.ejb.SessionBean#ejbRemove()
     */
    public void ejbRemove() {
    }

    /**
     * See section 7.10.3 of the EJB 2.0 specification
     */
    public void ejbCreate( ) throws javax.ejb.CreateException {
    }

	/**
	 * 通过ID查找结果集
	 * @param  long id
	 * @return OffBalanceRegisterInfo
	 * @exception throws java.rmi.RemoteException, OffBalanceRegisterException
	 */
	public OffBalanceRegisterInfo findByID(long id) throws java.rmi.RemoteException, OffBalanceRegisterException {
		return offBalanceRegisterDAO.findByID(id);
	}

	/**
	 * 通过条件查找结果集
	 * @param  OffBalanceRegisterInfo offBalanceRegisterInfo
	 * @return Collection
	 * @exception throws java.rmi.RemoteException, OffBalanceRegisterException
	 */
	public Collection findByCondition(OffBalanceRegisterInfo offBalanceRegisterInfo) throws java.rmi.RemoteException, OffBalanceRegisterException {
		return offBalanceRegisterDAO.findByCondition(offBalanceRegisterInfo);
	}

	/**
	 * 保存
	 * @param  OffBalanceRegisterInfo offBalanceRegisterInfo
	 * @return void
	 * @exception throws java.rmi.RemoteException, OffBalanceRegisterException
	 */
	public void save(OffBalanceRegisterInfo offBalanceRegisterInfo) throws java.rmi.RemoteException, OffBalanceRegisterException {
		offBalanceRegisterDAO.add(offBalanceRegisterInfo);
	}

	/**
	 * 修改
	 * @param  OffBalanceRegisterInfo offBalanceRegisterInfo
	 * @return void
	 * @exception throws java.rmi.RemoteException, OffBalanceRegisterException
	 */
	public void update(OffBalanceRegisterInfo offBalanceRegisterInfo) throws java.rmi.RemoteException, OffBalanceRegisterException {
		offBalanceRegisterDAO.update(offBalanceRegisterInfo);
	}

	/**
	 * 修改状态
	 * @param  long statusID, String sTransNo
	 * @return void
	 * @exception throws OffBalanceRegisterException
	 */
	public void updateByTransNo(long statusID, String sTransNo) throws java.rmi.RemoteException, OffBalanceRegisterException {
		offBalanceRegisterDAO.updateByTransNo(statusID, sTransNo);
	}

	/**
	 * 修改业务方向
	 * @param  String sTransNo, long direction
	 * @return void
	 * @exception throws OffBalanceRegisterException
	 */
	public void updateByTransNo(String sTransNo, long direction,long transactionType) throws java.rmi.RemoteException, OffBalanceRegisterException {
		offBalanceRegisterDAO.updateByTransNo(sTransNo, direction,transactionType);
	}

	/**
	 * 删除
	 * @param  long id
	 * @return void
	 * @exception throws java.rmi.RemoteException, OffBalanceRegisterException
	 */
	public void delete(long id) throws java.rmi.RemoteException, OffBalanceRegisterException {
		offBalanceRegisterDAO.delete(id);			
	}
}