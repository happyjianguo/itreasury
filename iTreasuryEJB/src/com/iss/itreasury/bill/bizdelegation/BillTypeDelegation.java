/* Generated by Together */

package com.iss.itreasury.bill.bizdelegation;

import java.util.Collection;

import com.iss.itreasury.bill.billtype.bizlogic.BillTypeBean;
import com.iss.itreasury.bill.billtype.dataentity.BillTypeInfo;
import com.iss.itreasury.bill.billtype.dataentity.BillTypeQueryInfo;
import com.iss.itreasury.bill.util.BillException;

public class BillTypeDelegation {

	private BillTypeBean facade = null;
    
	public BillTypeDelegation()
	{
		facade = new BillTypeBean();
	}
	
    /**
     * 根据类型属性信息查找所有类型 调用BillTypeBean的相应方法
     * @param abstractTypeID 票据属性id
     * @return Collection中的对象为BillTypeInfo
     * @throws BillException
     */
    public Collection findByAbstractType(long abstractTypeID) throws BillException {
       
		return facade.findByAbstractType(abstractTypeID);
    }

    /**
     *根据查询条件查询票据类型 调用BillTypeBean的相应方法
     * @param qInfo 查询条件信息
     * @return Collection中的对象为BillTypeInfo
     * @throws BillException
     */
    public Collection findByMultiOption(BillTypeQueryInfo qInfo) throws BillException {
		
		return facade.findByMultiOption(qInfo);
    }

    /**
     * 新增票据类型信息 调用BillTypeBean的相应方法
     * @param BillTypeInfo	类型信息
     * @return long 新增的类型信息的ID
     * @throws BillException
     */
    public long add(BillTypeInfo info) throws BillException {
    	
    	long id = -1;
    	
		id = facade.add(info);
		
		return id;
    }

    /**
     * 修改票据类型信息 调用BillTypeBean的相应方法
     * @param BillTypeinfo	类型信息
     * @return void
     * @throws BillException
     */
    public long update(BillTypeInfo info) throws BillException {
    	
		long id = -1;

		id = facade.update(info);
		
		return id;
    }

    /**
     * 根据id删除类型信息 调用BillTypeBean的相应方法
     * @param id	类型id
     * @return void
     * @throws BillException
     */
    public void delete(long id) throws BillException {
    	
		facade.delete(id);
    }

    /**
     * 根据id查找类型信息 调用BillTypeBean的相应方法
     * @param id	类型id
     * @return BillTypeInfo
     * @throws BillException
     */
    public BillTypeInfo findByID(long id) throws BillException {
    	
		BillTypeInfo info = new BillTypeInfo();
		
		info = facade.findByID(id);
			
		return info;
    }


	/**
	 * 根据id查找类型信息 调用BillTypeBean的相应方法
	 * @param id	类型id
	 * @return BillTypeInfo
	 * @throws BillException
	 */
	public long findMaxBillTypeCode() throws BillException {
		
    	long code = 0;
    	
		code=facade.findMaxBillTypeCode(); 	
			
		return code;
	}    
    
    
}
