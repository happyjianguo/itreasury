/* Generated by Together */

package com.iss.itreasury.codingrule.tags;

/* Author:YanLiu */

import java.io.IOException;
import java.util.HashMap;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.tagext.TagSupport;

import com.iss.itreasury.codingrule.dataentity.CodingSectInfo;
import com.iss.itreasury.codingrule.dataentity.ReturnFormatInfo;
import com.iss.itreasury.codingrule.util.RuleEnv;

//根据RuleEnv解析出的xml内容,生成展现格式控件
public class ReturnFormatTag extends TagSupport 
{
	private String controlName = "codingSect"; 		//控件名称
	private String defaultValue = "";				//默认值		
	private boolean isDisabled = false;				//是否disable
	private String onchange = "";					//onchange方法
	private String extProperty = "";				//扩展属性
	private long codingSectType = -1;				//编码类型
	
	public int doStartTag() throws JspException 
    {
    	try 
    	{
			JspWriter out = pageContext.getOut();		
			String strOutPrint = "";
			
			RuleEnv env = RuleEnv.getInstance();
			HashMap h_CodingSects = env.getCodingSects();
			HashMap h_ReturnFormats = env.getReturnFormats();
			
			if(codingSectType>0)
			{
				CodingSectInfo codingSectInfo = (CodingSectInfo)h_CodingSects.get(String.valueOf(codingSectType));
				ReturnFormatInfo returnInfo = (ReturnFormatInfo)h_ReturnFormats.get(String.valueOf(codingSectInfo.getFormat_type()));
				if(returnInfo!=null && returnInfo.getFormat_mode().equalsIgnoreCase("select"))//选择控件
				{
					strOutPrint = "<select class=\"select\"  name=\"" + controlName + "\" "+ extProperty ;
					if(isDisabled)
					{
						strOutPrint +=" disabled ";
					}
					if(onchange != null)
					{
						strOutPrint +=" onchange=\" "+onchange+"\" ";
					}	
					strOutPrint += ">\n";
					
					String[] paraList = returnInfo.getParameter().split(";");
					if(paraList!=null && paraList.length>0)
					{
						for(int i=0;i<paraList.length;i++)
						{
							String para = paraList[i];
							
							strOutPrint += "<option value='"+paraList[i]+"' ";
							if(paraList[i].equals(defaultValue) )
							{
								strOutPrint += " selected ";
							}	
							strOutPrint += " > ";
							strOutPrint += paraList[i];
							strOutPrint += " </option> \n";	
						}	
					}
					strOutPrint += "</select>\n";
				}
				else if(returnInfo!=null && returnInfo.getFormat_mode().equalsIgnoreCase("input"))//文本控件
				{
					strOutPrint = "<input class=\"textbox\" name=\"" + controlName + "\" "+ extProperty ;
					if(isDisabled)
					{
						strOutPrint +=" disabled ";
					}
					if(onchange != null)
					{
						strOutPrint +=" onchange=\" "+onchange+"\" ";
					}	
					if(defaultValue!=null && defaultValue.length()>0)
					{
						strOutPrint +="value=\""+defaultValue+"\" ";
					}
					strOutPrint += ">\n";
				}	
			}
			
			out.println(strOutPrint);			
		} 
    	catch (IOException ex) 
    	{
		}
		catch (Exception ex) 
		{
		}
        return SKIP_BODY;
    }

    public int doEndTag() throws JspException {
        //
        // Write your code here
        //
        return EVAL_PAGE;
    }

	public String getControlName() {
		return controlName;
	}

	public void setControlName(String controlName) {
		this.controlName = controlName;
	}

	public String getDefaultValue() {
		return defaultValue;
	}

	public void setDefaultValue(String defaultValue) {
		this.defaultValue = defaultValue;
	}

	public String getExtProperty() {
		return extProperty;
	}

	public void setExtProperty(String extProperty) {
		this.extProperty = extProperty;
	}

	public boolean isDisabled() {
		return isDisabled;
	}

	public void setDisabled(boolean isDisabled) {
		this.isDisabled = isDisabled;
	}

	public String getOnchange() {
		return onchange;
	}

	public void setOnchange(String onchange) {
		this.onchange = onchange;
	}

	public long getCodingSectType() {
		return codingSectType;
	}

	public void setCodingSectType(long codingSectType) {
		this.codingSectType = codingSectType;
	}
}
