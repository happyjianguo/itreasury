/* Generated by Together */

package com.iss.itreasury.codingrule.dao;
import java.sql.Connection;
import java.sql.Timestamp;

import com.iss.itreasury.codingrule.dataentity.SerialnumberDetailInfo;
import com.iss.itreasury.codingrule.dataentity.SerialnumberInfo;
import com.iss.itreasury.codingrule.util.CodingRuleFormat;
import com.iss.itreasury.dao.ITreasuryDAO;
import com.iss.itreasury.dao.ITreasuryDAOException;
import com.iss.itreasury.util.Constant;

/* Author:YanLiu */

public class Sys_SerialNumberDetailDao extends ITreasuryDAO
{
	public Sys_SerialNumberDetailDao()
	{
		super("SYS_SERIALNUMBERDETAIL");
	}
	public Sys_SerialNumberDetailDao(Connection con)
	{
		super("SYS_SERIALNUMBERDETAIL",con);
	}
	
	/**
	 * 从数据库中根据codingruleid物理删除记录
	 * 使用时请确定是逻辑删除还是物理删除！！
	 * */
	public void deleteCodingRuleDetail(long codingruleid) throws ITreasuryDAOException{
		String strSQL = "delete from SYS_SERIALNUMBERDETAIL where SERIALNUMBERID = "+ codingruleid;
		initDAO();
		log.debug(strSQL);
		prepareStatement(strSQL);
		executeUpdate();
		finalizeDAO();
	}
	
	public String getSerialNumber(SerialnumberInfo info,Timestamp tsToday) throws Exception
	{
		long lReturn = -1;
		String strReturn = "";
		long lID = -1;
		String strSQL = "";
		String strYear = "";
		String strMonth = "";
		String strDay = "";
		try
		{
			int i =1;
			String strToday = CodingRuleFormat.formatTimestamp(tsToday, "yyyymmdd");
			strYear = strToday.substring(0,4);
			strMonth = strToday.substring(4,6);
			strDay = strToday.substring(6,8);
			
			this.initDAO();
			
			strSQL = "select id,SERIALNO from SYS_SERIALNUMBERDETAIL where 1=1 ";
			strSQL += " and SERIALNUMBERID = ?";
			
			if(info.getIscurrency()==Constant.YesOrNo.YES)
			{
				strSQL += " and CURRENCYID = ?";
			}
			if(info.getIscontract()==Constant.YesOrNo.YES)
			{
				strSQL += " and CONTRACTID = ?";
			}
			
			prepareStatement(strSQL.toString());
			
			this.transPS.setLong(i++, info.getId());
			if(info.getIscurrency()==Constant.YesOrNo.YES)
			{
				this.transPS.setLong(i++, info.getCurrencyID());
			}
			if(info.getIscontract()==Constant.YesOrNo.YES)
			{
				this.transPS.setLong(i++, info.getContractID());
			}
						
			executeQuery();
			if (transRS.next())
			{
				lID = transRS.getLong("id");				
			}
			
			if(lID>0)//查找出然后自增加
			{
				i=1;		
				if(info.getPeriodtype()==1)
				{
					strSQL += " and substr(to_char(SERIALNODATE,'yyyymmdd'),1,4) = ? " ;
				}
				else if(info.getPeriodtype()==2)
				{
					strSQL += " and substr(to_char(SERIALNODATE,'yyyymmdd'),1,4) =? " ;
					strSQL += " and substr(to_char(SERIALNODATE,'yyyymmdd'),5,2) =? " ;
				}
				else if(info.getPeriodtype()==3)
				{
					strSQL += " and substr(to_char(SERIALNODATE,'yyyymmdd'),1,4) =? " ;
					strSQL += " and substr(to_char(SERIALNODATE,'yyyymmdd'),5,2) =? ";
					strSQL += " and substr(to_char(SERIALNODATE,'yyyymmdd'),7,2) =? " ;
				}
				strSQL += " for update ";
					
				prepareStatement(strSQL.toString());
				this.transPS.setLong(i++, info.getId());
				if(info.getIscurrency()==Constant.YesOrNo.YES)
				{
					this.transPS.setLong(i++, info.getCurrencyID());
				}
				if(info.getIscontract()==Constant.YesOrNo.YES)
				{
					this.transPS.setLong(i++, info.getContractID());
				}
				if(info.getPeriodtype()==1)
				{
					this.transPS.setString(i++, strYear);
				}
				else if(info.getPeriodtype()==2)
				{
					this.transPS.setString(i++, strYear);
					this.transPS.setString(i++, strMonth);
				}
				else if(info.getPeriodtype()==3)
				{
					this.transPS.setString(i++, strYear);
					this.transPS.setString(i++, strMonth);
					this.transPS.setString(i++, strDay);
				}
				
				executeQuery();
				
				if (this.transRS.next())
				{
					lReturn = transRS.getLong("SERIALNO");
					strReturn = String.valueOf(lReturn);				
				}
				
				//
				if(lReturn>0)
				{
					strSQL = "";
					strSQL = "update SYS_SERIALNUMBERDETAIL set SERIALNO=SERIALNO+1 where id="+lID;					
				}
				else
				{
					strSQL = "";
					strSQL = "update SYS_SERIALNUMBERDETAIL set SERIALNO=2 , SERIALNODATE=to_date('"+strToday+"','yyyymmdd') where id="+lID;	
					strReturn = "1";
				}
				prepareStatement(strSQL.toString());
				executeUpdate();
			}		
			else//插入一条数据
			{
				SerialnumberDetailInfo detailInfo = new SerialnumberDetailInfo();

				detailInfo.setSerialnumberid(info.getId());
				if(info.getIscurrency()==Constant.YesOrNo.YES)
				{	
					detailInfo.setCurrencyid(info.getCurrencyID());
				}
				else
				{
					detailInfo.setCurrencyid(-1);
				}	
				if(info.getIscontract()==Constant.YesOrNo.YES)
				{
					detailInfo.setContractid(info.getContractID());
				}
				else
				{
					detailInfo.setContractid(-1);
				}
				detailInfo.setSerialno(2);
				detailInfo.setSerialnodate(tsToday);
	        	this.setUseMaxID();
	        	this.add(detailInfo);	  
	        	strReturn = "1";
			}	
			
		}
		catch(Exception e)
		{
			e.printStackTrace();
			System.out.println(e.toString());
			throw e;
		}
		finally
		{
			finalizeDAO();
		}
		
		return strReturn;
	}

}
