/* Generated by Together */

package com.iss.itreasury.clientmanage.systemset.clientattribute.dao;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.Vector;

import com.iss.itreasury.dao.ITreasuryDAOException;
import com.iss.itreasury.clientmanage.dao.CimsBaseDao;
import com.iss.itreasury.util.Constant;
import com.iss.itreasury.util.Env;
import com.iss.itreasury.util.ITreasuryException;
import com.iss.itreasury.clientmanage.systemset.clientattribute.dataentity.ClientAttributeInfo;


/**
*客户属性设置DAO.对应于表Client_ExtendAttribute
*
* */
public class ClientAttributeDAO extends CimsBaseDao {
	
	public ClientAttributeDAO() {
        super("Client_ExtendAttribute");
    }
    public ClientAttributeDAO(Connection con) {
        super("Client_ExtendAttribute",con);
    }
    
    /**
     * 保存更新
     * @param     CAInfo    客户属性信息
     * @return   		long    成功，返回客户设置标示；失败，返回值=-1
     * @throws Exception
     * @throws ITreasuryException
     */
    public long saveClientAttribute(ClientAttributeInfo dataEntity) throws SQLException, ITreasuryDAOException
    {
    	long lReturn = -1;
    	StringBuffer strSQL = new StringBuffer();

		strSQL.append("UPDATE Client_ExtendAttribute set \n");
		strSQL.append("	ID = "+dataEntity.getID()+" \n");
		if(dataEntity.getAttributeID() > 0)
		{
			strSQL.append(" , attributeid = " + dataEntity.getAttributeID()+" \n");
		}
		if(dataEntity.getCode()!=null && dataEntity.getCode().length()>0)
		{
			strSQL.append(" , code = '" + dataEntity.getCode() + "'  \n");
		}
		if(dataEntity.getName()!=null && dataEntity.getName().length()>0)
		{
			strSQL.append(" , name = '" + dataEntity.getName() + "' \n");
		}
		if(dataEntity.getInputUserID() > 0)
		{
			strSQL.append(" , inputuserid = " + dataEntity.getInputUserID() + "  \n");
		}
		if(dataEntity.getInputDate() != null)
		{
			strSQL.append(" , inputdate = '" + dataEntity.getInputDate() + "'  \n");
		}
		if(dataEntity.getStatusID() > 0)
		{
			strSQL.append(" , statusid = " + dataEntity.getStatusID()+ "  \n");
		}
		
		try {			
			transPS = transConn.prepareStatement(strSQL.toString());
			lReturn = transPS.executeUpdate();
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally {
			finalizeDAO();
		}

    	return (lReturn);

	}

    /**
     * 新增
     * @param     CAInfo   客户属性信息
     * @return   long     成功，返回客户设置标示；失败，返回值=-1
     * @throws Exception
     * @throws ITreasuryException
     */
    public long insertClientAttribute(ClientAttributeInfo dataEntity) throws SQLException, ITreasuryDAOException
    {
    	long id = 0;
    	long lReturn = -1;
    	StringBuffer strSQL = new StringBuffer();
    	StringBuffer ssql = new StringBuffer();
    	try 
		{
    	//获取最大id
    		ssql.append("select nvl(max(id),0)+1 as id from Client_ExtendAttribute");
    		transPS = transConn.prepareStatement(ssql.toString());
    		transRS = transPS.executeQuery();
			while(transRS.next())
			{
				id = transRS.getLong("id");
			}
			dataEntity.setId(id);
			strSQL.append(" insert into Client_ExtendAttribute \n");
			strSQL.append(" (ID,AttributeID,name,InputUserID,InputDate,StatusID,OfficeID,CurrencyID) \n");
			strSQL.append(" values(?,?,?,?,?,?,?,?) \n");
		
		
			transPS = transConn.prepareStatement(strSQL.toString());
			transPS.setLong(1,id);
			transPS.setLong(2,dataEntity.getAttributeID());
			transPS.setString(3,dataEntity.getName());
			transPS.setLong(4,dataEntity.getInputUserID());
			transPS.setTimestamp(5,Env.getSystemDate());
			transPS.setLong(6,Constant.RecordStatus.VALID);
			transPS.setLong(7,dataEntity.getOfficeID());
			transPS.setLong(8,dataEntity.getCurrencyID());
			lReturn = transPS.executeUpdate();
			
			finalizeDAO();
		} 	catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally{
			finalizeDAO();
		}
    	
		return (lReturn);
    }
    
    
    /**
     *从视图(vClientAttributeSet)获得客户属性设置信息
     * 视图(vClientAttributeSet)为从自定义字段名称设置表、客户属性设置表联合组织的视图
     * 其中包含属性ID（关联字段，两个表都有）、属性名称（自定义字段名称表）、属性值（属性设置表）
     * */
    public Vector findAttributeSetInfo(long AttributeID) throws SQLException, ITreasuryDAOException {
    	
    	Vector v = new Vector();
    	StringBuffer strSQL = new StringBuffer();

		strSQL.append("SELECT Client_ExtendAttribute.id id,Client_ExtendAttribute.name name1,Client_CustomFieldSetting.name name2 \n");
		strSQL.append(" FROM Client_ExtendAttribute,Client_CustomFieldSetting \n");
		strSQL.append("WHERE Client_CustomFieldSetting.FieldID = Client_ExtendAttribute.AttributeID \n");
		strSQL.append(" and Client_ExtendAttribute.AttributeID ="+ AttributeID +" \n");
		
		
		try {
			transPS = transConn.prepareStatement(strSQL.toString());
			transRS = transPS.executeQuery();
			while(transRS.next())
			{
				ClientAttributeInfo CAInfo = new ClientAttributeInfo();
				CAInfo.setID(transRS.getLong("id"));
				CAInfo.setCustomname(transRS.getString("name2"));
				CAInfo.setName(transRS.getString("name1"));
				v.add(CAInfo);
			}
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally{
			finalizeDAO();
		}

    	return (v);
    }
    
    public Vector findAttributeSetInfo(long AttributeID, long officeID,long currencyID) throws SQLException, ITreasuryDAOException {
    	
    	Vector v = new Vector();
    	StringBuffer strSQL = new StringBuffer();

		strSQL.append("SELECT Client_ExtendAttribute.id id,Client_ExtendAttribute.name name1,Client_CustomFieldSetting.name name2 \n");
		strSQL.append(" FROM Client_ExtendAttribute,Client_CustomFieldSetting \n");
		strSQL.append("WHERE Client_CustomFieldSetting.FieldID = Client_ExtendAttribute.AttributeID \n");
		strSQL.append(" and Client_ExtendAttribute.AttributeID ="+ AttributeID +" \n");
		strSQL.append(" and Client_CustomFieldSetting.OfficeID = " + officeID + " \n");	
		//strSQL.append(" and Client_CustomFieldSetting.currencyID = " + currencyID + " \n");	
		strSQL.append(" and Client_CustomFieldSetting.OfficeID = Client_ExtendAttribute.OfficeID \n");
		strSQL.append(" and Client_CustomFieldSetting.currencyID = Client_ExtendAttribute.currencyID \n");
		
		try {
			transPS = transConn.prepareStatement(strSQL.toString());
			transRS = transPS.executeQuery();
			while(transRS.next())
			{
				ClientAttributeInfo CAInfo = new ClientAttributeInfo();
				CAInfo.setID(transRS.getLong("id"));
				CAInfo.setCustomname(transRS.getString("name2"));
				CAInfo.setName(transRS.getString("name1"));
				v.add(CAInfo);
			}
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally{
			finalizeDAO();
		}

    	return (v);
    }

    /**
     * 检验是否有已存在的属性名
     * @param dataEntity
     * @return
     * @throws Exception
     */
    public long checkByAttributeID(ClientAttributeInfo dataEntity) throws SQLException, ITreasuryDAOException
    {
    	long lReturn = -1;
    	StringBuffer strSQL = new StringBuffer();

		strSQL.append("SELECT * FROM Client_ExtendAttribute \n");
		strSQL.append(" WHERE name = '"+dataEntity.getName()+"' \n");
		if(dataEntity.getAttributeID() > 0)
		{
			strSQL.append(" and AttributeID = " + dataEntity.getAttributeID()+" \n");
			strSQL.append(" and officeid = " + dataEntity.getOfficeID()+" \n");
		}
		
		try {
			transPS = transConn.prepareStatement(strSQL.toString());
			System.out.println(strSQL.toString());
			transRS = transPS.executeQuery();
			if (transRS != null&& transRS.next()) {
				lReturn = 1;
			}
			
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally{
			finalizeDAO();
		}

		return (lReturn);

    }
    
    /**
     * 
     * @author chuanliu
     *
     * TODO To change the template for this generated type comment go to
     * Window - Preferences - Java - Code Style - Code Templates
     */
   public Vector findCustomFieldInfo(long StatusID) throws SQLException, ITreasuryDAOException
   {
   		Vector v = new Vector();
   		
   		StringBuffer strSQL = new StringBuffer();

		strSQL.append("SELECT fieldid id,name name1 \n");
		strSQL.append(" FROM Client_CustomFieldSetting \n");
		strSQL.append("WHERE fieldid < 21 \n");
		strSQL.append(" and StatusID ="+ StatusID +" \n");
		strSQL.append(" and name is not null  \n");
		
		try {
			transPS = transConn.prepareStatement(strSQL.toString());
			transRS = transPS.executeQuery();
			while(transRS.next())
			{
				ClientAttributeInfo CAInfo = new ClientAttributeInfo();
				CAInfo.setAttributeID(transRS.getLong("id"));
				CAInfo.setCustomname(transRS.getString("name1"));
				v.add(CAInfo);
			}
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally{
			finalizeDAO();
		}

   		return (v);
   }
   
   public Vector findCustomFieldInfo(long StatusID, long officeID,long currencyID) throws SQLException, ITreasuryDAOException
   {
   		Vector v = new Vector();
   		
   		StringBuffer strSQL = new StringBuffer();

		strSQL.append("SELECT fieldid id,name name1 \n");
		strSQL.append(" FROM Client_CustomFieldSetting \n");
		strSQL.append("WHERE fieldid < 39 \n");
		strSQL.append(" and StatusID ="+ StatusID +" \n");
		strSQL.append(" and name is not null  \n");
		strSQL.append(" and OfficeID = " + officeID + " \n");
		strSQL.append(" and currencyID = " + currencyID + " \n");
		strSQL.append(" order by id");
		
		try {
			transPS = transConn.prepareStatement(strSQL.toString());
			transRS = transPS.executeQuery();
			while(transRS.next())
			{
				ClientAttributeInfo CAInfo = new ClientAttributeInfo();
				CAInfo.setAttributeID(transRS.getLong("id"));
				CAInfo.setCustomname(transRS.getString("name1"));
				v.add(CAInfo);
			}
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally{
			finalizeDAO();
		}

   		return (v);
   }
	/**
	 * 
	 */
	public void clearDAO() throws ITreasuryDAOException
	{
		super.finalizeDAO();
	}
	/**
	 * @param info
	 */
	public void deleteName(ClientAttributeInfo info) throws Exception
	{
		StringBuffer strSQL = new StringBuffer();
		strSQL.append("delete \n");
		strSQL.append(" FROM client_extendattribute \n");
		strSQL.append("WHERE id = " + info.getId() + " \n");
		
		try {
			transPS = transConn.prepareStatement(strSQL.toString());
			System.out.println(strSQL.toString());
			transPS.executeUpdate();
			
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally{
			finalizeDAO();
		}
	}
	
	public String getAttributename(long id) throws SQLException
	{	
		String strName = "";
		StringBuffer strSQL = new StringBuffer();

		strSQL.append("SELECT name FROM Client_ExtendAttribute \n");
		strSQL.append(" WHERE id = ? \n");
		
		transPS = transConn.prepareStatement(strSQL.toString());
		transPS.setLong(1, id);
		transRS = transPS.executeQuery();
		
		while (transRS.next())
		{
			strName = transRS.getString("name");
		}
		try {
			finalizeDAO();
		} catch (ITreasuryDAOException e) {			
			e.printStackTrace();
		}
		
		return strName;
	}
	
   
}
