/* Generated by Together */

package com.iss.itreasury.clientmanage.systemset.customfield.dao;

import com.iss.itreasury.clientmanage.dao.CimsBaseDao;
import com.iss.itreasury.clientmanage.systemset.customfield.dataentity.CustomFieldInfo;
import com.iss.itreasury.clientmanage.util.CMConstant;
import com.iss.itreasury.dao.ITreasuryDAOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Vector;
/**
*用户自定义字段DAO，对应于表Client_CustomFieldSetting
* */
public class CustomFieldDAO extends CimsBaseDao {
	
	public CustomFieldDAO() {
		super("Client_CustomFieldSetting");
	}
    public CustomFieldDAO(Connection con) {
    	super("Client_CustomFieldSetting",con);
    }

    /**
     *获得用户自定义字段定义中的所有的属性定义信息。
     * @author
     * @return    CustomFieldInfo
     * */
    public Vector findAttributeInfo(long StatusID, long officeID) throws SQLException, ITreasuryDAOException{
    	StringBuffer strSQL = new StringBuffer();
    	
		strSQL.append("SELECT * FROM Client_CustomFieldSetting \n");
		strSQL.append("WHERE StatusID = "+StatusID+" \n");
		strSQL.append("and OfficeID = "+officeID+" order by FieldID\n");
		
		Vector v = new Vector();
		try {
			transPS = transConn.prepareStatement(strSQL.toString());
			
			transRS = transPS.executeQuery();
			while(transRS.next())
			{
				CustomFieldInfo Info = new CustomFieldInfo();
				Info.setId(transRS.getLong("ID"));
				Info.setFieldID(transRS.getLong("FieldID"));
				Info.setName(transRS.getString("name"));
				v.add(Info);	
			} 
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally{
			finalizeDAO();
		}

		return (v);

    }
    
    /**
     *获得用户自定义字段定义中的所有的属性定义信息。
     * @author
     * @return    CustomFieldInfo
     * */
    public Vector findAttributeInfo(long StatusID, long officeID,long currencyID) throws SQLException, ITreasuryDAOException{
    	StringBuffer strSQL = new StringBuffer();
    	
		strSQL.append("SELECT " +
				" a.id," +
				" a.fieldid," +
				" nvl(a.name," +
				"     decode(a.fieldid," +
				"            1," +
				"            '"+CMConstant.FieldID(1)+"'," +
				"            2," +
				"            '"+CMConstant.FieldID(2)+"'," +
				"            3," +
				"            '"+CMConstant.FieldID(3)+"'," +
				"            4," +
				"            '"+CMConstant.FieldID(4)+"'," +
				"            5," +
				"            '"+CMConstant.FieldID(5)+"'," +
				"            6," +
				"            '"+CMConstant.FieldID(6)+"'," +
				"            11," +
				"            '"+CMConstant.FieldID(11)+"'," +
				"            12," +
				"            '"+CMConstant.FieldID(12)+"'," +
				"            13," +
				"            '"+CMConstant.FieldID(13)+"'," +
				"            14," +
				"            '"+CMConstant.FieldID(14)+"'," +
				"            15," +
				"            '"+CMConstant.FieldID(15)+"'," +
				"            16," +
				"            '"+CMConstant.FieldID(16)+"'," +
				"            17," +
				"            '"+CMConstant.FieldID(17)+"'," +
				"            18,                " +
				"            '"+CMConstant.FieldID(18)+"'," +
				"            21," +
				"            '"+CMConstant.FieldID(21)+"'," +
				"            22," +
				"            '"+CMConstant.FieldID(22)+"'," +
				"            23," +
				"            '"+CMConstant.FieldID(23)+"'," +
				"            24," +
				"            '"+CMConstant.FieldID(24)+"'," +
				"            25," +
				"            '"+CMConstant.FieldID(25)+"'," +
				"            26," +
				"            '"+CMConstant.FieldID(26)+"'," +
				"            27," +
				"            '"+CMConstant.FieldID(27)+"'," +
				"            28," +
				"            '"+CMConstant.FieldID(28)+"'," +
				"            31," +
				"            '"+CMConstant.FieldID(31)+"'," +
				"            32," +
				"            '"+CMConstant.FieldID(32)+"'," +
				"            33," +
				"            '"+CMConstant.FieldID(33)+"'," +
				"            34," +
				"            '"+CMConstant.FieldID(34)+"'," +
				"            35," +
				"            '"+CMConstant.FieldID(35)+"'," +
				"            36," +
				"            '"+CMConstant.FieldID(36)+"'," +
				"            37," +
				"            '"+CMConstant.FieldID(37)+"'," +
				"            38,                " +
				"            '"+CMConstant.FieldID(38)+"'," +
				"            '')) name,        " +
				" a.inputuserid," +
				" a.inputdate," +
				" a.statusid," +
				" a.officeid," +
				" a.currencyid" +
				" FROM Client_CustomFieldSetting  a\n");
		strSQL.append("WHERE a.StatusID = "+StatusID+" \n");
		strSQL.append("and a.fieldid<=38\n");
		strSQL.append("and a.OfficeID = "+officeID+"  order by FieldID\n");
		
		Vector v = new Vector();
		try {
			transPS = transConn.prepareStatement(strSQL.toString());
			
			transRS = transPS.executeQuery();
			while(transRS.next())
			{
				CustomFieldInfo Info = new CustomFieldInfo();
				Info.setId(transRS.getLong("ID"));
				Info.setFieldID(transRS.getLong("FieldID"));
				Info.setName(transRS.getString("name"));
				v.add(Info);	
			} 
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally{
			finalizeDAO();
		}

		return (v);

    }
    
    /**
     * 新增
     * @param dataEntity
     * @throws Exception
     * @return     成功，返回值=1 ； 失败，返回值=-1 ；
     */
    /*
    public long insert(CustomFieldInfo dataEntity) throws SQLException, ITreasuryDAOException
    {
    	long id = 0;
    	long lReturn = -1;
    	StringBuffer strSQL = new StringBuffer();
    	StringBuffer ssql = new StringBuffer();
    	try {
    		//获取最大id
    		ssql.append("select nvl(max(id),0)+1 as id from Client_CustomFieldSetting");
    		transPS = transConn.prepareStatement(ssql.toString());
    		transRS = transPS.executeQuery();
    		while(transRS.next())
    		{
    			id = transRS.getLong("id");
    		}
    		dataEntity.setID(id);
    		strSQL.append(" insert into Client_CustomFieldSetting \n");
    		strSQL.append(" (FieldID,name,InputUserID,InputDate,StatusID) \n");
    		strSQL.append(" values(?,?,?,?,?,?) \n");
		
			transPS = transConn.prepareStatement(strSQL.toString());
			transPS.setLong(1,id);
    		transPS.setLong(2,dataEntity.getFieldID());
    		transPS.setString(3,dataEntity.getName());
    		transPS.setLong(4,dataEntity.getInputUserID());
    		transPS.setTimestamp(5,dataEntity.getInputDate());
    		transPS.setLong(6,dataEntity.getStatusID());
    		
			lReturn = transPS.executeUpdate();
			
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally{
			finalizeDAO();
		}
    	
		return (lReturn);
			   	
    }
    */
    /**
     * 更新
     * @param dataEntity
     * @return		成功，返回值=1 ； 失败，返回值=-1 ；
     * @throws Exception
     * @throws Exception
     */
    /*
    public long update(CustomFieldInfo dataEntity) throws SQLException, ITreasuryDAOException
    {
    	long lReturn = -1;
    	StringBuffer strSQL = new StringBuffer();
		
		strSQL.append("UPDATE Client_CustomFieldSetting set \n");
//		strSQL.append(" FieldID = " + dataEntity.getFieldID()+" \n");
		strSQL.append(" name = '" + dataEntity.getName() + "'  \n");
		strSQL.append(" , InputUserID = " + dataEntity.getInputUserID() + " \n");
		strSQL.append(" , InputDate = " + dataEntity.getInputDate() + "  \n");
		strSQL.append(" , StatusID = " + dataEntity.getStatusID() + "  \n");
		strSQL.append(" where FieldID = " + dataEntity.getFieldID()+" \n");
		
		try {			
			transPS = transConn.prepareStatement(strSQL.toString());
			lReturn = transPS.executeUpdate();
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally {
			finalizeDAO();
		}

    	return (lReturn);
    }
    */
	/**
	 * @param 检验FieldID是否已存在
	 * @return	 已存在，返回值=1 ； 否则，返回值=-1 ；
	 */
	public long checkByFieldInfo(CustomFieldInfo dataEntity) throws SQLException, ITreasuryDAOException
	{
		long lReturn = -1;
    	StringBuffer strSQL = new StringBuffer();

		strSQL.append("SELECT * FROM Client_CustomFieldSetting \n");
		strSQL.append(" WHERE name = '"+dataEntity.getName()+"' \n");
		if(dataEntity.getFieldID() > 0)
		{
			strSQL.append(" AND FieldID != "+dataEntity.getFieldID()+" \n");
		}

		try {
			transPS = transConn.prepareStatement(strSQL.toString());
			transRS = transPS.executeQuery();
			if (transRS != null && transRS.next()) {
				lReturn = 1;
			}
			
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally{
			finalizeDAO();
		}

		return (lReturn);

	}
	
	/**
	 * 根据自定义字段id查找其名称
	 * @param FieldID
	 * @return strName;
	 * @throws SQLException
	 * @author huiyu
	 */
	public String getFieldname(int FieldID) throws SQLException
	{	
		String strName = "";
		StringBuffer strSQL = new StringBuffer();

		strSQL.append("SELECT name FROM Client_CustomFieldSetting \n");
		strSQL.append(" WHERE fieldid = ? \n");
		
		transPS = transConn.prepareStatement(strSQL.toString());
		transPS.setLong(1, FieldID);
		transRS = transPS.executeQuery();
		
		while (transRS.next())
		{
			strName = transRS.getString("name");
		}
		try {
			finalizeDAO();
		} catch (ITreasuryDAOException e) {			
			e.printStackTrace();
		}
		
		return strName;
		}

	public String getFieldname(long FieldID, long officeID,long currencyID) throws SQLException
	{	
		String strName = "";
		StringBuffer strSQL = new StringBuffer();

		strSQL.append("SELECT name FROM Client_CustomFieldSetting \n");
		strSQL.append(" WHERE fieldid = ? \n");
		strSQL.append(" and officeid = ? \n");
		strSQL.append(" and currencyID = ? \n");
		
		transPS = transConn.prepareStatement(strSQL.toString());
		transPS.setLong(1, FieldID);
		transPS.setLong(2, officeID);
		transPS.setLong(3, currencyID);
		
		transRS = transPS.executeQuery();
		
		while (transRS.next())
		{
			strName = transRS.getString("name");
		}
		try {
			finalizeDAO();
		} catch (ITreasuryDAOException e) {			
			e.printStackTrace();
		}
		
		return strName;
	}
}
