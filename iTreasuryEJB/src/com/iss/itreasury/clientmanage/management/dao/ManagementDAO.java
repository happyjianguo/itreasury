/* Generated by Together */

package com.iss.itreasury.clientmanage.management.dao;

import com.iss.itreasury.clientmanage.dao.CimsBaseDao;
import com.iss.itreasury.clientmanage.management.dataentity.ManagementInfo;
import com.iss.itreasury.dao.ITreasuryDAOException;
import com.iss.itreasury.clientmanage.util.CMConstant;
import com.iss.itreasury.util.Constant;
import java.sql.Connection;
import java.util.Collection;
import com.iss.itreasury.util.ITreasuryException;
/**
*企业管理层信息DAO，对应于表Client_Management
* */
public class ManagementDAO extends CimsBaseDao {
    public ManagementDAO() {
		super("Client_Management");
    }
    
    public ManagementDAO(Connection con) {
    	super("Client_Management",con);
    }

     /**
     *获得属于某一客户的所有企业管理层信息
     * */
     public Collection findByClientID(long clientID) throws ITreasuryException{
     	
     	Collection data = null;
     	
     	try
		{
			
			StringBuffer sb = new StringBuffer();
			sb.append(" select *");
			sb.append(" from Client_Management a,client_clientinfo b");
			//modifid by mzh_fu 2007/03/31 解决将已软删除的记录查询出来的问题
			//sb.append(" where a.ClientID =b.id and a.clientid = ? and (b.statusid is null or b.statusid <> 0)");
			sb.append(" where a.ClientID =b.id and a.clientid = ? and  a.statusid = "+com.iss.itreasury.util.Constant.TRUE);
			transPS = transConn.prepareStatement(sb.toString());
			transPS.setLong(1, clientID);
			
			transRS = transPS.executeQuery();
			
			data=getDataEntitiesFromResultSet(new ManagementInfo().getClass());
		}
		catch (Exception e)
		{
			log.error(e.toString());
			throw new ITreasuryException();
		}
		finalizeDAO();
		return data;
     }
     
     /**
      * 根据Code查询 经营管理信息
      * @author chuanliu
      *
      * TODO To change the template for this generated type comment go to
      * Window - Preferences - Java - Code Style - Code Templates
      */
     public ManagementInfo findManagement(long ClientID) throws Exception
 	{
     	StringBuffer strSQL = new StringBuffer();
     	ManagementInfo Info = new ManagementInfo();
     	
     	strSQL.append("select COUNT(MangermentID) count \n");
     	strSQL.append(" from Client_Management \n");
 		strSQL.append("WHERE ClientID = " + ClientID + "  \n");
 		
 		try {			
 			transPS = transConn.prepareStatement(strSQL.toString());
 			transRS = transPS.executeQuery();
 			while(transRS.next())
 			{
 				Info.setCount(transRS.getLong("count"));	
 			}
 			finalizeDAO();
 		} catch (ITreasuryDAOException e) {
 			e.printStackTrace();
 			throw e;
 		} finally {
 			finalizeDAO();
 		}
     	return (Info);
 	} 	
    /**
     * 管理层信息新增名称重复校验
     * @param managementinfo
     * @return
     * @throws ITreasuryException
     */
 	public boolean isManagerNameRepeat(ManagementInfo managementinfo) throws ITreasuryException {
 		
 		boolean exists = false;
 		try {
 			initDAO();
 			StringBuffer sb = new StringBuffer();
 			sb.append(" select managername");
 			sb.append(" from client_management ");
 			sb.append(" where statusid = "+Constant.RecordStatus.VALID+" and  managername = '"+ managementinfo.getManagername());
 			sb.append("' ");
 			sb.append(" and id<> " + managementinfo.getId() + " ");
 			transPS = transConn.prepareStatement(sb.toString());
 			transRS = transPS.executeQuery();
 			if (transRS.next()) {
 				exists = true;
 			}
 		} catch (Exception e) {
 			log.error(e.toString());
 			throw new ITreasuryException();
 		}
 		finalizeDAO();

 		return exists;
 	}
}
