/* Generated by Together */

package com.iss.itreasury.clientmanage.enterpriselaw.bizlogic;

import java.sql.Connection;
import java.util.Collection;
import com.iss.itreasury.clientmanage.enterpriselaw.dao.EnterpriseLawDAO;
import com.iss.itreasury.clientmanage.enterpriselaw.dataentity.EnterpriseLawInfo;

import com.iss.itreasury.command.Command;


import com.iss.itreasury.util.Database;



public class EnterpriseLawCmd extends Command{
    
	public long add( EnterpriseLawInfo dataEntity) throws Exception {
    	long myid = -1;
    	Connection con = null;
    	con = Database.getConnection();
    	EnterpriseLawDAO  enterpriselawdao = new EnterpriseLawDAO(con);
   
 	enterpriselawdao.setUseMaxID();
    	myid = enterpriselawdao.add(dataEntity);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    	
    	return myid;
    }

    /**
     *	修改记录
     * @throws Exception
     * */
    public void update(EnterpriseLawInfo dataEntity) throws Exception{
    	Connection con = null;
    	con = Database.getConnection();
    	EnterpriseLawDAO  enterpriselawdao = new EnterpriseLawDAO(con);
    	
    	enterpriselawdao.update(dataEntity);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
     
    	
    }

    /**
     *	删除记录
     * @throws Exception
     * */
	public void delete(long id) throws Exception{
		Connection con = null;
		con = Database.getConnection();
    	EnterpriseLawDAO  enterpriselawdao = new EnterpriseLawDAO(con);
    	enterpriselawdao.delete(id);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}

    }
	
	/**
     *	判断新code是否重复
	 * @throws Exception
     * @throws Exception
     * */
	public String isRecode(long id,String newcode) throws Exception {
		Connection con = null;
		String s = "";
		con = Database.getConnection();
    	EnterpriseLawDAO  enterpriselawdao = new EnterpriseLawDAO(con);
    	s=enterpriselawdao.isRename(id,newcode);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    	return s;

    }
	
	/**
     *	新增一条诉讼
	 * @throws Exception
     * @throws Exception
     * */
	public String creatCord(long id) throws Exception {
		Connection con = null;
		String s = "";
		con = Database.getConnection();
    	EnterpriseLawDAO  enterpriselawdao = new EnterpriseLawDAO(con);
    	s=enterpriselawdao.creatCode(id);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    	return s;

    }

    /**
     *根据编号获得一条企业诉讼信息
     * @throws Exception
     * */
    public EnterpriseLawInfo findById(long id) throws Exception{
    	EnterpriseLawInfo oneenterpriselawinfo = new EnterpriseLawInfo();
    	Connection con = null;
    	con = Database.getConnection();
    	EnterpriseLawDAO  enterpriselawdao = new EnterpriseLawDAO(con);
    	oneenterpriselawinfo =(EnterpriseLawInfo) enterpriselawdao.findByID(id,oneenterpriselawinfo.getClass());
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    	return oneenterpriselawinfo;
    }


	/**
     *根据法人客户编号，获得该法人客户的企业诉讼信息
     * @param   clientID 法人客户ID
     * @return  EnterpriseLawDataEntity组成的Collection
	 * @throws Exception
     * */
    public Collection findByClientID(long clientID) throws Exception{
    	Collection data = null;
    	Connection con = null;
    	con = Database.getConnection();
    	EnterpriseLawDAO  enterpriselawdao = new EnterpriseLawDAO(con);
    	data=enterpriselawdao.findByClientID(clientID);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    	return data;
    	
    }

    /**
     * 根据条件查询企业诉讼信息
     * @return    符合查询条件的 ：Collection<EnterpriseLawDataEntity>
     * @throws Exception
     * */
	public Collection findByCondition(EnterpriseLawInfo dataEntity) throws Exception{
		Collection data = null;
    	Connection con = null;
    	con = Database.getConnection();
    	EnterpriseLawDAO  enterpriselawdao = new EnterpriseLawDAO(con);
    	data=enterpriselawdao.findByCondition(dataEntity);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    	return data;
    }
	
    /**
     * 
     * @param args
     * @throws Exception
     */
    public EnterpriseLawInfo findEnterpriseLaw(long ClientID) throws Exception
	{
    	Connection con = null;
    	EnterpriseLawInfo Info = new EnterpriseLawInfo();
    	EnterpriseLawDAO enterpriselawdao = null;
    	
    	try
		{
    		con = Database.getConnection();
    		enterpriselawdao = new EnterpriseLawDAO(con);
    		Info = enterpriselawdao.findEnterpriseLaw(ClientID);
		}
    	catch(Exception e)
		{
    		if(con != null)
    		{
    			con.close();
    			con = null;
    		}
		}
    	finally
		{
    		try
			{
    			if(con != null)
    			{
    				con.close();
    				con = null;
    			}
			}
    		catch(Exception ex)
			{
    			throw new Exception(ex.getMessage());
			}
		}
    	return (Info);
	}
    
    public static void main(String []args) throws Exception
	{
    	EnterpriseLawCmd  onepartnercmd = new EnterpriseLawCmd();
    	 	
    	  	  	
    	
    	System.out.println("contain===="+onepartnercmd.creatCord(3));
    	
    }

}
