/* Generated by Together */

package com.iss.itreasury.clientmanage.client.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

import com.iss.itreasury.clientmanage.client.dataentity.CorporationInfo;
import com.iss.itreasury.clientmanage.client.dataentity.QueryClientInfo;

import com.iss.itreasury.clientmanage.dao.CimsBaseDao;
import com.iss.itreasury.clientmanage.dataentity.ClientInfo;
import com.iss.itreasury.dao.ITreasuryDAOException;
import com.iss.itreasury.loan.base.LoanDAOException;

import com.iss.itreasury.util.Constant;
import com.iss.itreasury.util.DataFormat;
import com.iss.itreasury.util.Database;

import com.iss.itreasury.util.Log4j;

/**
 * 法人客户基本信息DAO，对应于表Client_ CorporationInfo
 */
public class CorporationDAO extends CimsBaseDao {

	protected Log4j log4j = new Log4j(Constant.ModuleType.PLAN, this);

	public CorporationDAO() {
		super("Client_CorporationInfo");
	}

	public CorporationDAO(Connection con) {
		super("Client_CorporationInfo", con);
	}

	/**
	 * 
	 * @throws SQLException,
	 *             ITreasuryDAOException
	 * @author chuanliu
	 * 
	 * TODO To change the template for this generated type comment go to Window -
	 * Preferences - Java - Code Style - Code Templates
	 */
	public long updatecorporationinfo(CorporationInfo dataEntity)
			throws SQLException, ITreasuryDAOException {
		long lReturn = -1;
		StringBuffer strSQL = new StringBuffer();

		strSQL.append("UPDATE Client_CustomFieldSetting set \n");
		strSQL.append("	CustomerManagerUserID = " + dataEntity.getClientInfo()
				+ " \n");

		log4j.info("SQL=" + strSQL.toString());

		this.initDAO();

		try {
			this.prepareStatement(strSQL.toString());
			lReturn = this.executeUpdate();
			this.finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally {
			this.finalizeDAO();
		}

		return (lReturn);
	}

	/**
	 * 数据库查找操作 根据客户id查询法人信息
	 * 
	 * @param id
	 * @param className
	 *            需要查找的数据库表对应的Data Entity的类名
	 * @return
	 * @throws ITreasuryDAOException
	 */
	public CorporationInfo findByclietID(long clientid)
			throws ITreasuryDAOException {
		initDAO();
		Collection data = null;
		Iterator it = null;
		CorporationInfo res = new CorporationInfo();
		StringBuffer buffer = new StringBuffer();
		buffer.append("SELECT * FROM \n");
		buffer.append(strTableName);
		buffer.append("\n WHERE clientid = " + clientid);
		String strSQL = buffer.toString();
		log.debug(strSQL);

		try {

			transPS = transConn.prepareStatement(strSQL);
			transRS = transPS.executeQuery();
			data = getDataEntitiesFromResultSet(res.getClass());
			it = data.iterator();
			if (it.hasNext()) {
				res = (CorporationInfo) it.next();
			}

		} catch (Exception e) {
			e.printStackTrace();
		}

		finalizeDAO();

		return res;
	}

	/**
	 * 根据Code查询 查信用评审
	 * 
	 * @author chuanliu
	 * 
	 * TODO To change the template for this generated type comment go to Window -
	 * Preferences - Java - Code Style - Code Templates
	 */
	public CorporationInfo findAppraise(long ClientID) throws Exception {
		CorporationInfo Info = new CorporationInfo();
		StringBuffer strSQL = new StringBuffer();

		strSQL.append("select CreditLevelID \n");
		strSQL.append("from Client_CorporationInfo \n");
		strSQL.append("WHERE ClientID = " + ClientID + "  \n");

		try {
			transPS = transConn.prepareStatement(strSQL.toString());
			transRS = transPS.executeQuery();
			while (transRS.next()) {
				Info.setCreditLevelID(transRS.getString("CreditLevelID"));
			}
			finalizeDAO();
		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} finally {
			finalizeDAO();
		}
		return (Info);
	}

	/**
	 * @param id
	 * @param parentCorpID1
	 */
	public void updateParent(long id, long parentCorpID1) throws Exception {

		StringBuffer strSQL = new StringBuffer();

		strSQL.append("UPDATE client_corporationinfo set \n");
		strSQL.append("	parentCorpID1 = " + parentCorpID1 + " \n");
		strSQL.append(" where clientid = " + id + " \n");

		try {

			transPS = transConn.prepareStatement(strSQL.toString());
			transPS.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			finalizeDAO();
		}
	}

	public Collection findDetailById(long lId) throws ITreasuryDAOException {
		Collection cltReturn = null;
		StringBuffer strSQL = new StringBuffer();
		strSQL.append("select a.*,");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID1) CLIENTTYPEID1_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID2) CLIENTTYPEID2_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID3) CLIENTTYPEID3_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID4) CLIENTTYPEID4_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID5) CLIENTTYPEID5_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID6) CLIENTTYPEID6_Name,  ");

		strSQL
				.append("	(select name from CLIENT_CLIENTINFO  where id=a.PARENTCORPID1) PARENTCORPID1_Name,  ");

		strSQL
				.append("	(select name from CLIENT_CLIENTINFO  where id=a.PARENTCORPID2) PARENTCORPID2_Name,  ");

		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE1) EXTENDATTRIBUTE1_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE2) EXTENDATTRIBUTE2_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE3) EXTENDATTRIBUTE3_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE4) EXTENDATTRIBUTE4_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE5) EXTENDATTRIBUTE5_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE6) EXTENDATTRIBUTE6_Name,  ");

		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE7) EXTENDATTRIBUTE7_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE8) EXTENDATTRIBUTE8_Name  ");

		strSQL.append(" from Client_CorporationInfo a ");
		strSQL.append(" where ");
		strSQL.append("     a.id = ? ");

		try {
			initDAO();
			prepareStatement(strSQL.toString());
			transPS.setLong(1, lId);
			executeQuery();
			cltReturn = getDataEntitiesFromResultSet(CorporationInfo.class);

		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} catch (Exception e) {
			throw new ITreasuryDAOException(e.getMessage(), e);
		} finally {
			finalizeDAO();
		}
		return cltReturn;
	}

	public Collection findDetailByClientId(long lClientId)
			throws ITreasuryDAOException {
		Collection cltReturn = null;
		StringBuffer strSQL = new StringBuffer();
		strSQL.append("select a.*,");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID1) CLIENTTYPEID1_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID2) CLIENTTYPEID2_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID3) CLIENTTYPEID3_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID4) CLIENTTYPEID4_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID5) CLIENTTYPEID5_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE where id=a.CLIENTTYPEID6) CLIENTTYPEID6_Name,  ");

		strSQL
				.append("	(select name from CLIENT_CLIENTINFO  where id=a.PARENTCORPID1) PARENTCORPID1_Name,  ");

		strSQL
				.append("	(select name from CLIENT_CLIENTINFO  where id=a.PARENTCORPID2) PARENTCORPID2_Name,  ");

		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE1) EXTENDATTRIBUTE1_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE2) EXTENDATTRIBUTE2_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE3) EXTENDATTRIBUTE3_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE4) EXTENDATTRIBUTE4_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE5) EXTENDATTRIBUTE5_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE6) EXTENDATTRIBUTE6_Name,  ");

		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE7) EXTENDATTRIBUTE7_Name,  ");
		strSQL
				.append("	(select name from CLIENT_EXTENDATTRIBUTE  where id=a.EXTENDATTRIBUTE8) EXTENDATTRIBUTE8_Name  ");

		strSQL.append(" from Client_CorporationInfo a ");
		strSQL.append(" where ");
		strSQL.append("     a.ClientId = ? ");

		try {
			initDAO();
			prepareStatement(strSQL.toString());
			transPS.setLong(1, lClientId);
			executeQuery();
			cltReturn = getDataEntitiesFromResultSet(CorporationInfo.class);

		} catch (ITreasuryDAOException e) {
			e.printStackTrace();
			throw e;
		} catch (Exception e) {
			throw new ITreasuryDAOException(e.getMessage(), e);
		} finally {
			finalizeDAO();
		}
		return cltReturn;
	}
	public void updateForLog(ClientInfo clientInfo,CorporationInfo dataEntity,long userID,long officeID,long insertLogTypeName)
	throws ITreasuryDAOException {
try {
 
	initDAO();

	StringBuffer buffer = new StringBuffer();
    buffer.append("insert into SETT_OPERATELOG (ID, USERID, CLIENTID,OFFICEID, INSERTLOGTYPENAME, CONTENT,EXECUTEDATE)");
	buffer.append("values ((select nvl(max(ID)+1,1) ID from sett_operateLog),"+userID+","+clientInfo.getId()+","+ officeID+", "+insertLogTypeName+", ");
	buffer.append("'"+clientInfo.toStringForLog()+dataEntity.toStringForLog()+"',?)");
	String strSQL = buffer.toString();
	log.debug(strSQL); 
	prepareStatement(strSQL);   
	transPS.setTimestamp(1,DataFormat.getDateTime(DataFormat.getDateString()));
	executeUpdate();

} catch (ITreasuryDAOException ide) {
	throw ide;
}catch(Exception e){
	e.printStackTrace();
} finally {// added by mzh_fu 2008/03/26 将关闭连接放到 finally 中
	finalizeDAO();
}

}
}