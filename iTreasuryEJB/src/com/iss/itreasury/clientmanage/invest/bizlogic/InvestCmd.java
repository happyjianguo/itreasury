/* Generated by Together */

package com.iss.itreasury.clientmanage.invest.bizlogic;

import java.sql.Connection;
import java.util.Collection;

import com.iss.itreasury.clientmanage.invest.dao.InvestDAO;
import com.iss.itreasury.clientmanage.invest.dataentity.InvestInfo;
import com.iss.itreasury.command.Command;
import com.iss.itreasury.dao.ITreasuryDAOException;
import com.iss.itreasury.util.Database;


public class InvestCmd extends Command{
	
	 /**
     *增加一条企业投资受控单位信息
     * @param  受控单位情况dataEntity
     * @return  新增记录ID
	 * @throws ITreasuryDAOException
	 * @throws Exception
     * */
    public long add(InvestInfo dataEntity) throws Exception {
    	
    	long myid = -1;
    	Connection con = null;
    	con = Database.getConnection();
    	InvestDAO investdao = new InvestDAO(con);
    	investdao.setUseMaxID();
    	myid = investdao.add(dataEntity);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    	return myid;
    }
    
    /**
     *更新一条企业受控单位情况信息
     * @param  企业受控情况dataEntity
     * @throws ITreasuryDAOException
     * @throws Exception
     * 
     * */

    public void update(InvestInfo dataEntity) throws Exception{
    	Connection con = null;
    	con = Database.getConnection();
    	InvestDAO investdao = new InvestDAO(con);
    	
    	investdao.update(dataEntity);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    
    }

    
    /**
     *删除一条受控位情况信息
     * @param id 企业受控单位Id
     * @throws ITreasuryDAOException
     * @throws Exception
     * */
    public void delete(long id) throws Exception{
    	Connection con = null;
    	con = Database.getConnection();
    	InvestDAO investdao = new InvestDAO(con);
    	investdao.delete(id);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    }
	
    
    /**
     *获得编号为id的一条企业投资信息
     * @throws Exception
     * */
    public InvestInfo findById(long id) throws Exception{
    	
    	InvestInfo oneinvestinfo = new InvestInfo();
    	Connection con = null;
    	con = Database.getConnection();
    	InvestDAO investdao = new InvestDAO(con);
    	oneinvestinfo =(InvestInfo) investdao.findByID(id,oneinvestinfo.getClass());
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    	return oneinvestinfo;
    	
    }
	/**
     *获得编号为clientID的企业的所有企业投资信息
     * @param  clientID法人客户ID
     * @return  包含IvestDataEntity的Collection
	 * @throws Exception
     * */
    public Collection findByClientID(long clientID) throws Exception{
    	Collection data = null;
    	Connection con = null;
    	con = Database.getConnection();
    	InvestDAO investdao = new InvestDAO(con);
    	data=investdao.findByClientID(clientID);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    	return data;
    }

   	/**
     *根据查询条件获得企业对外投资信息结果集
     * @param  dataEntity
     * @return  包含IvestDataEntity的Collection
   	 * @throws Exception
     * */
    public Collection findByCondition(InvestInfo dataEntity) throws Exception{
    	Collection data = null;
    	Connection con = null;
    	con = Database.getConnection();
    	InvestDAO investdao = new InvestDAO(con);
    	data=investdao.findByCondition(dataEntity);
    	if(con != null)
    	{
    		con.close();
    		con=null;
    	}
    	return data;
    }

    /**
     * 
     * @param args
     * @throws Exception
     */
    public InvestInfo findInvest(long ClientID) throws Exception
	{
    	Connection con = null;
    	InvestInfo Info = new InvestInfo();
    	InvestDAO investdao = null;
    	
    	try
		{
    		con = Database.getConnection();
    		investdao = new InvestDAO(con);
    		Info = investdao.findInvest(ClientID);
		}
    	catch(Exception e)
		{
    		if(con != null)
    		{
    			con.close();
    			con = null;
    		}
		}
    	finally
		{
    		try
			{
    			if(con != null)
    			{
    				con.close();
    				con = null;
    			}
			}
    		catch(Exception ex)
			{
    			throw new Exception(ex.getMessage());
			}
		}
    	return (Info);
	}
}
